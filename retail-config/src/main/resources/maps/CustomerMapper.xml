<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="au.com.biztune.retail.dao.CustomerDao">
    <!-- result maps -->
    <resultMap id="customerMap" type="Customer" >
        <id column="customer_id" property="id" />
        <result column="First_Name" property="firstName" />
        <result column="Sur_Name" property="surName" />
        <result column="Middle_Name" property="middleName" />
        <result column="Company_Name" property="companyName" />
        <result column="Date_Of_Birth" property="dateOfBirth" />
        <result column="Address" property="address" />
        <result column="Address2" property="address2" />
        <result column="E_Mail" property="email" />
        <result column="Mobile" property="mobile" />
        <result column="Phone" property="phone" />
        <result column="Web_Site" property="webSite" />
        <result column="Code" property="code" />
        <result column="Title" property="title" />
        <result column="Fax" property="fax" />
        <association resultMap="au.com.biztune.retail.dao.CustomerGradeDao.gradeMap" property="grade" />
        <association property="customerType" column="Customer_Type" select="au.com.biztune.retail.dao.ConfigCategoryDao.getCategoryById" />
        <association property="customerStatus" column="CUSTOMER_STATUS" select="au.com.biztune.retail.dao.ConfigCategoryDao.getCategoryById" />
    </resultMap>

    <resultMap id="customerMapWhole" type="Customer" >
        <id column="customer_id" property="id" />
        <result column="First_Name" property="firstName" />
        <result column="Sur_Name" property="surName" />
        <result column="Middle_Name" property="middleName" />
        <result column="Company_Name" property="companyName" />
        <result column="Date_Of_Birth" property="dateOfBirth" />
        <result column="Address" property="address" />
        <result column="Address2" property="address2" />
        <result column="E_Mail" property="email" />
        <result column="Mobile" property="mobile" />
        <result column="Phone" property="phone" />
        <result column="Web_Site" property="webSite" />
        <result column="Code" property="code" />
        <result column="Title" property="title" />
        <result column="Fax" property="fax" />
        <association resultMap="au.com.biztune.retail.dao.CustomerGradeDao.gradeMap" property="grade" />
        <association property="customerType" column="Customer_Type" select="au.com.biztune.retail.dao.ConfigCategoryDao.getCategoryById" />
        <association property="customerStatus" column="CUSTOMER_STATUS" select="au.com.biztune.retail.dao.ConfigCategoryDao.getCategoryById" />
        <collection property="contacts" javaType="ArrayList" column="customer_id" ofType="Contact" select="getAllContactsPerCustomerId"/>
    </resultMap>


    <sql id="customerColumns">
        ${alias}.CUSTOMER_ID,
        ${alias}.Customer_Type,
        ${alias}.CUSTOMER_STATUS,
        ${alias}.First_Name,
        ${alias}.Sur_Name,
        ${alias}.Middle_Name,
        ${alias}.Company_Name,
        ${alias}.Date_Of_Birth,
        ${alias}.Address,
        ${alias}.Address2,
        ${alias}.E_Mail,
        ${alias}.Mobile,
        ${alias}.Phone,
        ${alias}.Web_Site,
        ${alias}.Code,
        ${alias}.Title,
        ${alias}.Fax
    </sql>
    <sql id="gradeColumns">
        ${alias}.grade_id,
        ${alias}.GRADE_CODE,
        ${alias}.GRADE_NAME,
        ${alias}.DESCRIPTION,
        ${alias}.RATE
    </sql>

    <select id="getAllContactsPerCustomerId" resultMap="au.com.biztune.retail.dao.ContactDao.contactMap" >
        SELECT
        <include refid="au.com.biztune.retail.dao.ContactDao.contactColumns"><property name="alias" value="contact"/></include>
        FROM
        CUSTOMER_CONTACT cust_contact inner join contact contact on (cust_contact.contact_id = contact.contact_id)
        WHERE cust_contact.CUSTOMER_ID = #{value}
    </select>

    <select id="getAllCustomers" resultMap="customerMap" >
        SELECT
            <include refid="customerColumns"><property name="alias" value="c"/></include>,
            <include refid="gradeColumns"><property name="alias" value="g"/></include>
        FROM
        CUSTOMER C
        LEFT OUTER JOIN
        CUSTOMER_GRADE g on (c.grade_id = g.grade_id)
    </select>

    <select id="getCustomerByCode" resultMap="customerMap" >
        SELECT
            <include refid="customerColumns"><property name="alias" value="c"/></include>,
            <include refid="gradeColumns"><property name="alias" value="g"/></include>
        FROM
            CUSTOMER C
        LEFT OUTER JOIN
          CUSTOMER_GRADE g on (c.grade_id = g.grade_id)
        WHERE
          c.code = #{value}
    </select>

    <select id="getCustomerByCompanyName" resultMap="customerMap" >
        SELECT
        <include refid="customerColumns"><property name="alias" value="c"/></include>,
        <include refid="gradeColumns"><property name="alias" value="g"/></include>
        FROM
        CUSTOMER C
        LEFT OUTER JOIN
        CUSTOMER_GRADE g on (c.grade_id = g.grade_id)
        WHERE
        c.Company_Name = #{value}
    </select>

    <select id="getCustomerById" resultMap="customerMapWhole" >
        SELECT
            <include refid="customerColumns"><property name="alias" value="c"/></include>,
            <include refid="gradeColumns"><property name="alias" value="g"/></include>
        FROM
          CUSTOMER C
        LEFT OUTER JOIN
          CUSTOMER_GRADE g on (c.grade_id = g.grade_id)
        WHERE
          c.customer_id = #{value}
    </select>

    <insert id="insert" parameterType="Customer" useGeneratedKeys="true" keyProperty="id" keyColumn="CUSTOMER_ID">
        INSERT INTO CUSTOMER(
        Customer_Type,
        CUSTOMER_STATUS,
        First_Name,
        Sur_Name,
        Middle_Name,
        Company_Name,
        Date_Of_Birth,
        Address,
        Address2,
        E_Mail,
        Mobile,
        Phone,
        Web_Site,
        Code,
        Title,
        Fax,
        grade_Id
        ) VALUES (
        #{customerType.id}
        <if test="customerStatus != null">
            ,#{customerStatus.id}
        </if>
        <if test="customerStatus == null">
            ,null
        </if>
        <if test="firstName != null">
            ,#{firstName}
        </if>
        <if test="firstName == null">
            ,null
        </if>
        <if test="surName != null">
            ,#{surName}
        </if>
        <if test="surName == null">
            ,null
        </if>
        <if test="middleName != null">
            ,#{middleName}
        </if>
        <if test="middleName == null">
            ,null
        </if>
        <if test="companyName != null">
            ,#{companyName}
        </if>
        <if test="companyName == null">
            ,null
        </if>
        <if test="dateOfBirth != null">
            ,#{dateOfBirth}
        </if>
        <if test="dateOfBirth == null">
            ,null
        </if>
        <if test="address != null">
            ,#{address}
        </if>
        <if test="address == null">
            ,null
        </if>
        <if test="address2 != null">
            ,#{address2}
        </if>
        <if test="address2 == null">
            ,null
        </if>
        <if test="email != null">
            ,#{email}
        </if>
        <if test="email == null">
            ,null
        </if>
        <if test="mobile != null">
            ,#{mobile}
        </if>
        <if test="mobile == null">
            ,null
        </if>
        <if test="phone != null">
            ,#{phone}
        </if>
        <if test="phone == null">
            ,null
        </if>
        <if test="webSite != null">
            ,#{webSite}
        </if>
        <if test="webSite == null">
            ,null
        </if>
        <if test="code != null">
            ,#{code}
        </if>
        <if test="code == null">
            ,null
        </if>
        <if test="title != null">
            ,#{title}
        </if>
        <if test="title == null">
            ,null
        </if>
        <if test="fax != null">
            ,#{fax}
        </if>
        <if test="fax == null">
            ,null
        </if>
        <if test="grade != null">
            ,#{grade.id}
        </if>
        <if test="grade == null">
            ,null
        </if>
        )
    </insert>


    <insert id="insertCustomerContact" parameterType="CustomerContact" useGeneratedKeys="true" keyProperty="id" keyColumn="CUST_CONTACT_ID">
        INSERT INTO CUSTOMER_CONTACT(
        CUSTOMER_ID,
        CONTACT_ID
        ) VALUES (
        #{customerId},
        #{contact.id}
        )
    </insert>

    <delete id="deleteCustomerContactById" >
        DELETE
        From CUSTOMER_CONTACT
        WHERE
        CUST_CONTACT_ID = #{value}
    </delete>
    <delete id="deleteCustomerContactWhereIdNotIn" >
        DELETE from
        CUSTOMER_CONTACT
        WHERE CONTACT_ID not in
        <foreach collection="list" item="item" index="index"
                 open ="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <update id="update" parameterType="Customer" >
        UPDATE CUSTOMER SET
            Code = #{code}
            <if test="customerType != null">
                ,Customer_Type = #{customerType.id}
            </if>
            <if test="customerStatus != null">
                ,CUSTOMER_STATUS = #{customerStatus.id}
            </if>
            <if test="firstName != null">
                ,First_Name = #{firstName}
            </if>
            <if test="surName != null">
                  ,Sur_Name = #{surName}
            </if>
            <if test="middleName != null">
                  ,Middle_Name = #{middleName}
            </if>
            <if test="companyName != null">
                ,Company_Name = #{companyName}
            </if>
            <if test="dateOfBirth != null">
                ,Date_Of_Birth = #{dateOfBirth}
            </if>
            <if test="address != null">
                ,Address = #{address}
            </if>
            <if test="address2 != null">
                ,Address2 = #{address2}
            </if>
            <if test="email != null">
                ,E_Mail = #{email}
            </if>
            <if test="mobile != null">
                ,Mobile = #{mobile}
            </if>
            <if test="webSite != null">
                ,Web_Site = #{webSite}
            </if>
            <if test="title != null">
                ,Title = #{title}
            </if>
            <if test="fax != null">
                ,Fax = #{fax}
            </if>
            <if test="grade != null">
                ,grade_Id = #{grade.id}
            </if>
        WHERE CUSTOMER_ID = #{id}
    </update>
</mapper>