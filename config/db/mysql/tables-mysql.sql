USE RETAIL;

CREATE TABLE CONFIG_TYPE(
	CONFIG_TYPE_ID int UNIQUE  AUTO_INCREMENT NOT NULL,
	CONFIG_CODE varchar(100) NOT NULL,
	DISPLAY_NAME varchar(200) NOT NULL,
	DESCRIPTION varchar(500) NULL,
	CATEGORY_ORDER int NULL
);

CREATE TABLE CONFIG_CATEGORY(
	CATEGORY_ID BIGINT UNIQUE  AUTO_INCREMENT NOT NULL,
	CONFIG_TYPE_ID int NOT NULL,
	CATEGORY_CODE varchar(100) NULL,
	DISPLAY_NAME varchar(200) NOT NULL,
	CATEGORY_ORDER int ,
	DESCRIPTION varchar(500) NULL,
	COLOR varchar(100) NULL
);


CREATE TABLE Customer(
	CUSTOMER_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
	Customer_Type BIGINT,
	First_Name varchar(100) NULL,
	Sur_Name varchar(100) NULL,
	Middle_Name varchar(100) NULL,
	CUST_POSITION varchar(100) NULL,
	Company_Name nchar(100) NULL,
	Date_Of_Birth datetime NULL,
	Address varchar(500) NULL,
	Address2 varchar(500) NULL,
	E_Mail varchar(100) NULL,
	Mobile varchar(20) NULL,
	Phone varchar(20) NULL,
	Web_Site nchar(100) NULL,
	Code varchar(100) NULL,
	Title varchar(10) NULL,
	Fax varchar(20) NULL,
	Grade_Id int NULL,
	COMMENT varchar(1000) NULL,
  CREDIT_LIMIT DECIMAL(31,6) DEFAULT 0 NOT NULL,
  OWING DECIMAL(31,6) DEFAULT 0 NOT NULL,
  REMAIN_CREDIT DECIMAL(31,6) DEFAULT 0 NOT NULL,
  CREDIT_DURATION BIGINT DEFAULT 0 NOT NULL,
  CREDIT_START_DATE datetime,
  CREDIT_START_EOM BIT DEFAULT 0 NOT NULL,
	CONTACT_ID BIGINT NULL,
  CUSTOMER_STATUS BIGINT,
  DELETED BIT DEFAULT 0 NOT NULL,
  VERIFIED BIT DEFAULT 1 NOT NULL # SET BY BOQ IMPORT TO 0. AFTER BOQ IS VERIFIED SET TO 1 OTHERWISE RECORD NEED TO BE DELETED.
);

CREATE TABLE CUSTOMER_GRADE(
	GRADE_ID int UNIQUE AUTO_INCREMENT NOT NULL,
	GRADE_CODE varchar(20) NULL,
	GRADE_NAME varchar(200) NULL,
	DESCRIPTION varchar(500) NULL,
	RATE DECIMAL(31,6) NULL
);

CREATE TABLE CONTACT(
	CONTACT_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
	Title varchar(10) NULL,
	First_Name varchar(100) NULL,
	Sur_Name varchar(100) NULL,
	Middle_Name varchar(100) NULL,
	COUNTRY varchar(100) NULL,
	STATE varchar(100) NULL,
	SUBURB varchar(100) NULL,
	POST_CODE varchar(20) NULL,
	ADDRESS1 varchar(200) NULL,
	ADDRESS2 varchar(200) NULL,
	E_MAIL varchar(100) NULL,
	E_MAIL2 varchar(100) NULL,
	MOBILE varchar(20) NULL,
	PHONE varchar(20) NULL,
	FAX varchar(20) NULL,
	WEB_SITE nchar(100) NULL,
  CONTACT_TYPE BIGINT
);

CREATE TABLE CUSTOMER_CONTACT(
    CUST_CONTACT_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    CUSTOMER_ID BIGINT  NOT NULL,
    CONTACT_ID BIGINT  NOT NULL
);

CREATE TABLE CUSTOMER_ACCOUNT_DEBT(
    CAD_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    CUSTOMER_ID BIGINT  NOT NULL,
    TXHD_ID BIGINT  NOT NULL,
    TXHD_TXN_NR varchar(200),
    CAD_AMOUNT_DEBT DECIMAL(31,6) DEFAULT 0 NOT NULL,
    BALANCE DECIMAL(31,6) DEFAULT 0 NOT NULL,
    CAD_START_DATE datetime,
    CAD_DUE_DATE datetime,
    CAD_PAYMENT_DATE datetime,
    CAD_PAIED BIT DEFAULT 0 NOT NULL
);

CREATE TABLE SUPPLIER(
	SUPPLIER_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
	SUPPLIER_CODE varchar(50),
	SUPPLIER_NAME varchar(100) NOT NULL,
	SUPPLIER_TYPE_ID BIGINT NULL,
	SUPPLIER_STATUS_ID BIGINT NULL,
	CONTACT_ID BIGINT NULL,
	LEAD_TIME int NULL,
	STOCK_COVER int NULL,
	MIN_ORDER_VALUE decimal(19,4) NULL,
	CREDIT_LIMIT decimal(19,4) NULL,
	MAX_ADV_ORDER int NULL,
	LAST_MODIFIED_DATE datetime NULL,
	CREATE_DATE datetime NULL,
	LAST_MODIFIED_BY BIGINT NULL,
	CONTACT_FIRST_NAME varchar(100) NULL,
	CONTACT_SUR_NAME varchar(100) NULL,
	CONTACT_TITLE varchar(20) NULL,
	CONTACT_KNOWN_AS varchar(100) NULL,
  ACC_EXPORTED BIT DEFAULT 0 NOT NULL,
  DELIVERY_FREIGHT_FREE BIT DEFAULT 0 NULL,
  DELETED BIT DEFAULT 0 NOT NULL,
  VERIFIED BIT DEFAULT 1 NOT NULL #SET TO 0 WHEN IMPORTED FROM BOQ. USER NEED TO VERIFY AFTER IMPORTING
);

CREATE TABLE PROJECT(
    PROJECT_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    PROJECT_NAME VARCHAR(500) NOT NULL,
    PROJECT_CODE VARCHAR(100) NOT NULL,
    PROJECT_DESCRIPTION VARCHAR(1000) ,
    PROJECT_ADDRESS VARCHAR(1000) ,
    QUOTE_NO VARCHAR(100) ,
    REFERENCE_NO VARCHAR(100) ,
    DATE_REQUIRED datetime NULL,
    TOTAL_COST DECIMAL(31,6),
    TOTAL_PRICE DECIMAL(31,6),
    CLIENT_ID BIGINT,
    LCOUNT BIGINT DEFAULT 0 NOT NULL,
    VERIFIED BIT DEFAULT 1 NOT NULL # SET BY BOQ IMPORT TO 0. AFTER BOQ IS VERIFIED SET TO 1 OTHERWISE RECORD NEED TO BE DELETED.
);

CREATE TABLE BILL_OF_QUANTITY(
    BOQ_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    ORGU_ID BIGINT NOT NULL,
    PROJECT_ID BIGINT NOT NULL,
    REFERENCE_CODE VARCHAR(100),
    BOQ_NAME VARCHAR(100),
    ORDER_NO VARCHAR(100),
    NOTE VARCHAR(1000),
    DATE_CREATED datetime NULL,
    DATE_RELEASED datetime NULL,
    BOQ_STATUS BIGINT NOT NULL,
    BOQ_LAST_MODIFIED_DATE datetime,
    BOQ_LAST_MODIFIED_BY BIGINT,
    BOQ_VALUE_GROSS DECIMAL(31,6) DEFAULT 0 NOT NULL,
    BOQ_VALUE_NETT DECIMAL(31,6),
    BOQ_TOTAL_QTY DECIMAL(31,4),
    BOQ_TOTAL_LINES DECIMAL(31,4),
    LCOUNT BIGINT DEFAULT 0 NOT NULL
);

CREATE TABLE BOQ_DETAIL(
    BOQ_DETAIL_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    BOQ_ID BIGINT NOT NULL,
    SUPPLIER_ID BIGINT NOT NULL,
    PRIB_ID BIGINT,
    UNOM_ID BIGINT NOT NULL,
    PROD_ID BIGINT NOT NULL,
    PROD_IS_NEW BIT DEFAULT 0 NOT NULL,
    QUANTITY DECIMAL(31,4) NOT NULL,
    QTY_ON_STOCK DECIMAL(31,4) DEFAULT 0 NOT NULL,
    QTY_PURCHASED DECIMAL(31,4) DEFAULT 0 NOT NULL,
    QTY_RECEIVED DECIMAL(31,4) DEFAULT 0 NOT NULL,
    QTY_BALANCE DECIMAL(31,4) DEFAULT 0 NOT NULL,
    QTY_RELEASED DECIMAL(31,4) DEFAULT 0 NOT NULL,
    RLEASED_FOR_INVOICE varchar(200),
    COMMENT VARCHAR(1000),
    CHANGE_COMMENT VARCHAR(1000),
    COST DECIMAL(31,6) NOT NULL,
    ITEM_VALUE DECIMAL(31,6) NULL,
    MARGIN DECIMAL(31,6),
    SELL_PRICE DECIMAL(31,6),
    BQD_STATUS BIGINT ,
    BQD_CREATION_TYPE BIGINT,
    LCOUNT BIGINT DEFAULT 0 NOT NULL
);


CREATE TABLE LEGAL_TENDER(
    LEGT_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    LEGT_CODE VARCHAR(10) NOT NULL,
    LEGT_NAME VARCHAR(60) NOT NULL,
    LEGT_URL_IMAGE VARCHAR(2048),
    LEGT_URL_THUMB VARCHAR(2048),
    LEGT_FROM_DATE datetime,
    LEGT_TO_DATE datetime,
    LEGT_NO_DECS BIGINT NOT NULL,
    LEGT_MASK VARCHAR(2048),
    LEGT_IS_EURO BIT DEFAULT 0 NOT NULL,
    LEGT_EURO_MEMBER BIGINT DEFAULT 0 NOT NULL,
    LEGT_SYMBOL VARCHAR(6),
    LEGT_NUMERIC_CODE VARCHAR(10),
    LCOUNT BIGINT DEFAULT 0 NOT NULL
);

CREATE TABLE PRICE_BAND(
    PRIB_ACTIVE BIT DEFAULT 1 NOT NULL,
    PRIB_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    PRIB_CODE VARCHAR(10) NOT NULL,
    PRIB_NAME VARCHAR(60) NOT NULL,
    ORGU_ID BIGINT NOT NULL,
    LEGT_ID BIGINT NOT NULL,
    PRIB_TAX_INCLUDED BIT DEFAULT 0 NOT NULL,
    VALC_ID_CATEGORY BIGINT,
    LCOUNT BIGINT DEFAULT 0 NOT NULL
);

CREATE TABLE COMPANY(
    COMP_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    COMP_NAME VARCHAR(500) NOT NULL,
    COMP_DESC VARCHAR(1000) NULL,
    COMP_LOGO BLOB NULL,
    COMP_PIC BLOB NULL,
    COMP_CODE VARCHAR(100) NULL,
    COMP_IS_TRADING BIT,
    COMP_OPEN_DATE datetime,
    COMP_CLOSE_DATE datetime,
    COMP_CHQ_PAYEE VARCHAR(60),
    COMP_STK_AUTH_VAL DECIMAL(31,6),
    COMP_TRADE_CUTOFF datetime,
    COMP_PWRD_VALIDITY BIGINT,
    COMP_LOGOFF_PERIOD BIGINT DEFAULT 0 NOT NULL,
    COMP_FORCECRDSWIPE BIT DEFAULT 0 NOT NULL,
    COMP_SECURE_LOGOFF BIT DEFAULT 0 NOT NULL,
    COMP_PWD_RETRY BIGINT DEFAULT 3 NOT NULL,
    COMP_REF_DUP_RCPT BIT,
    COMP_RECON_ATTEMPT BIGINT,
    COMP_REFUND_DAYS BIGINT,
    COMP_REFUND_START datetime,
    COMP_REFUND_EXPIRY datetime,
    COMP_REFUND_DAYSGR BIGINT,
    COMP_REFUND_POLICY VARCHAR(255),
    COMP_DISC_TAX_RULE BIT DEFAULT 0 NOT NULL,
    COMP_CVOUCH_DAYS BIGINT,
    COMP_CVOUCH_POLICY VARCHAR(2048),
    COMP_GRACE_LIMIT BIGINT DEFAULT 0 NOT NULL,
    COMP_USER_LICENCE BIGINT DEFAULT 1 NOT NULL,
	CONTACT_ID BIGINT NULL, #CONTACT INFORMATION OF COMPANY
	COMPANY_TYPE_ID BIGINT NULL, #COMPANY TYPE
    LCOUNT BIGINT DEFAULT 0 NOT NULL
);

CREATE TABLE COMPANY_CONTACT(
    COMP_CONTACT_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    COMP_ID BIGINT  NOT NULL,
    CONTACT_ID BIGINT  NOT NULL
);

CREATE TABLE ORG_TYPE(
    ORGT_TYPE_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    ORGT_TYPE_NAME VARCHAR(60) NOT NULL,
    ORGT_TYPE_CODE VARCHAR(20) NOT NULL,
    LCOUNT BIGINT DEFAULT 0 NOT NULL
);

CREATE TABLE ORG_UNIT(
    ORGU_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    ORGU_NAME VARCHAR(60) NOT NULL,
    ORGU_DESC VARCHAR(2048),
    ORGU_CODE VARCHAR(10) NOT NULL,
    ORGT_TYPE_ID BIGINT NOT NULL,
    ORGU_SHORT_NAME VARCHAR(15),
    PRIB_ID BIGINT,
    WARH_ID BIGINT,
    OUTL_ID BIGINT,
    COMP_ID BIGINT,
    ORGU_DEF_LEGT_ID BIGINT,
    ORGU_CREATED datetime,
    ORGU_MODIFIED datetime,
    ORGU_NEXT_PO FLOAT,
    ORGU_AUDIT_LEVEL BIGINT,
    ORGU_SOFTWARE VARCHAR(10),
    ORGU_VAT_REG_NO VARCHAR(100),
    AIRP_ID BIGINT,
    PRIB_ID_COST BIGINT,
    ORGU_WEEE_REG_NO VARCHAR(100),
    ORGU_DEF_LANG_ID BIGINT,
    ORGU_TIME_ZONE VARCHAR(60),
    LCOUNT BIGINT DEFAULT 0 NOT NULL
);

CREATE TABLE STORE (
    STORE_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    ORGU_ID BIGINT NOT NULL,
    COMPANY_CODE VARCHAR(10),
    STORE_CODE VARCHAR(10) NOT NULL,
    STORE_NAME VARCHAR(30),
    STORE_STATUS BIGINT,
    CASH_SESSION_TYPE BIGINT
);
CREATE TABLE TXN_HEADER (
    TXHD_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    ORGU_ID BIGINT NOT NULL,
    STORE_ID BIGINT NOT NULL,
    TXHD_TXN_NR varchar(200),
    TXHD_PO_NR varchar(200),
    TXHD_STATE BIGINT,
    ORGU_ID_ORIGINAL BIGINT,
    TXHD_ORIG_TXN_NR varchar(200),
    TXHD_TRADING_DATE datetime,
    TXHD_TXN_TYPE BIGINT NOT NULL,
    TXHD_OPERATOR BIGINT,
    TXHD_VOIDED BIT NOT NULL DEFAULT 0,
    TXHD_VALUE_GROSS DECIMAL(31,6),
    TXHD_VALUE_NETT DECIMAL(31,6),
    TXHD_VALUE_DUE DECIMAL(31,6),
    TXHD_VALUE_CHANGE DECIMAL(31,6),
    TXHD_VAL_ROUNDING DECIMAL(31,6),
    TXHD_VALUE_TAXABLE DECIMAL(31,6),
    TXHD_VALUE_TAX DECIMAL(31,6),
    TXHD_RECEIPT_ID VARCHAR(50),
    CUSTOMER_ID BIGINT,
    TXHD_VOID_TXN_NR NUMERIC(10,0),
    TXHD_TAX_EXEMPT BIT NOT NULL DEFAULT 0,
    TXHD_REFUND_EXPIRY datetime,
    TXHD_COLLECT_DATE datetime,
    TXHD_DLV_ADDRESS VARCHAR(500),
    TXHD_CONTACT_PERSON VARCHAR(500),
    TXHD_CONTACT_PHONE VARCHAR(50),
    TXHD_EMAIL_TO VARCHAR(100),
    TXHD_PRINTED BIT DEFAULT 0,
    TXHD_STATUS BIGINT, #PURCHASE ORDER STATUS
    TXHD_PRJ_CODE VARCHAR(500),
    TXHD_COMMENT VARCHAR(1024)
);

CREATE TABLE TXN_DETAIL (
    TXDE_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    ORGU_ID BIGINT NOT NULL,
    STORE_ID BIGINT NOT NULL,
    TXHD_ID BIGINT NOT NULL,
    TXDE_PRICE_OVRIDEN BIT NOT NULL DEFAULT 0,
    TXDE_PROD_ID BIGINT NOT NULL,
    TXDE_UNOM_ID BIGINT,
    TXDE_VALUE_LINE DECIMAL(31,6),
    TXDE_PROFIT_MARGIN DECIMAL(31,6),
    TXDE_VALUE_PROFIT DECIMAL(31,6), #TXDE_VALUE_PROFIT= TXDE_VALUE_LINE * TXDE_PROFIT_MARGIN(WHICH IS BASE CUSTOMER)
    TXDE_VALUE_GROSS DECIMAL(31,6), #TXDE_VALUE_GROSS = (TXDE_VALUE_LINE + TXDE_VALUE_PROFIT)
    TXDE_TAX DECIMAL(31,6),
    TXDE_VALUE_NET DECIMAL(31,6),   #TXDE_VALUE_NET = TXDE_TAX*TXDE_VALUE_GROSS + TXDE_VALUE_GROSS
    TXDE_QUANTITY_SOLD DECIMAL(31,4),
    TXDE_QTY_INVOICED DECIMAL(31,4),
    TXDE_QTY_REFUND DECIMAL(31,4),
    TXDE_QTY_TOTAL_REFUND DECIMAL(31,4),
    TXDE_QTY_TOTAL_INVOICED DECIMAL(31,4),
    TXDE_QTY_BALANCE DECIMAL(31,4),
    TXDE_PRICE_SOLD DECIMAL(31,6),  #TXDE_VALUE_NET * TXDE_QUANTITY_SOLD
    TXDE_QTY_ORDERED DECIMAL(31,4), # Qty had been ordered from TXDE_QTY_BACK_ORDER. purchase order had been created for this
    TXDE_QTY_BACK_ORDER DECIMAL(31,4), # BACK ORDER QTY - qty yet to be ordered
    TXDE_QTY_RECEIVED DECIMAL(31,4), # BACK ORDER QTY
    TXDE_LINE_REFUND BIT NOT NULL DEFAULT 0,
    TXDE_ITEM_VOID BIT NOT NULL DEFAULT 0,
    TXDE_SERIAL_NUMBER VARCHAR(50),
    TXDE_WAS_SPLIT_PCK BIT NOT NULL DEFAULT 0,
    TXDE_DETAIL_LEVEL BIGINT,
    TXDE_PARENT_DETAIL BIGINT,
    TXDE_DETAIL_TYPE BIGINT NOT NULL,
    TXDE_DISC_PRICE DECIMAL(31,6),
    TXDE_RETURN_ORGU_ID BIGINT,
    TXDE_RETURN_STORE_ID BIGINT,
    TXDE_PROD_NAME VARCHAR(500),
    TXDE_STATUS BIGINT #PURCHASE ORDER STATUS
);

CREATE TABLE MEDIA_TYPE  (
   MEDT_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
   MEDT_NAME VARCHAR(100) NOT NULL,
   MEDT_DESC VARCHAR(200),
   MEDT_CODE VARCHAR(50) NOT NULL,
   MEDT_OPEN_DRAWER BIT NOT NULL DEFAULT 0,
   MEDT_ALLOW_EXCH_IN BIT NOT NULL DEFAULT 0,
   MEDT_ALLOW_EXCHOUT BIT NOT NULL DEFAULT 0,
   MEDT_REFUNDABLE BIT NOT NULL DEFAULT 0,
   MEDT_SHOW_EX_RATE BIT NOT NULL DEFAULT 0,
   MEDT_ALLOW_PAYIN BIT NOT NULL DEFAULT 0,
   MEDT_ALLOW_PAYOUT BIT NOT NULL DEFAULT 0,
   LCOUNT BIGINT NOT NULL DEFAULT 0
);

CREATE TABLE PAYMENT_MEDIA  (
   PAYM_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
   PAYM_NAME VARCHAR(100) NOT NULL,
   PAYM_CODE VARCHAR(50) NOT NULL,
   LEGT_ID BIGINT,
   MEDT_ID BIGINT NOT NULL,
   PAYM_CLASS_NAME VARCHAR(100),
   PAYM_ALWAYS_EURO BIT NOT NULL DEFAULT 0,
   PAYM_DISPLAY_TEXT VARCHAR(100),
   PAYM_REC_DIFF_VAL BIT DEFAULT 1,
   MAX_CHANGE DECIMAL(31,6),
   MAX_TENDER DECIMAL(31,6),
   MIN_TENDER DECIMAL(31,6),
   MAX_ONLINE_CASHBACK DECIMAL(31,6),
   MAX_OFFLINE_CASHBACK DECIMAL(31,6),
   USE_IN_STAFF_DISCOUNT BIT DEFAULT 0,
   MIN_ACCEPTABLE DECIMAL(31,6),
   TENDER_AUTH_THRESHOLD DECIMAL(31,6),
   IS_REVERSABLE BIT DEFAULT 0,
   LCOUNT BIGINT NOT NULL DEFAULT 0
 );

CREATE TABLE TXN_MEDIA(
  TXMD_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
  ORGU_ID BIGINT NOT NULL,
  STORE_ID BIGINT NOT NULL,
  TXHD_ID BIGINT NOT NULL,
  MEDT_ID BIGINT,
  PAYM_ID BIGINT,
  TXMD_TYPE BIGINT NOT NULL,
  TXMD_AMOUNT_LOCAL DECIMAL(38,6),
  TXMD_AMNT_FOREIGN DECIMAL(38,6),
  TXMD_PAN VARCHAR(20),
  TXMD_START_DATE VARCHAR(6),
  TXMD_EXPIRY_DATE VARCHAR(6),
  TXMD_ISSUE_NR DECIMAL(5,0),
  TXMD_SERIAL_ID VARCHAR(100),
  TXMD_NR_TENDERED SMALLINT,
  TXMD_AUTH_CODE VARCHAR(30),
  TXMD_VOIDED BIT DEFAULT 0 NOT NULL,
  TXMD_REFUNDED BIT DEFAULT 0 NOT NULL,
  TXMD_ACCOUNT_ID VARCHAR(100),
  TXMD_SORT_CODE VARCHAR(60),
  TXMD_AC_NAME VARCHAR(60),
  TXMD_MNEMONIC VARCHAR(6),
  TXMD_VOID_CODE VARCHAR(10),
  TXMD_GTEE_LIMIT DECIMAL(38,6),
  DEVC_TERMINAL_ID VARCHAR(60),
  TXMD_MERCHANT_ID VARCHAR(30),
  TXMD_EFT_SEQ_NO DECIMAL(38),
  TXMD_AUTH_ONLINE DECIMAL(38),
  TXMD_CUST_VERIFY DECIMAL(38),
  TXMD_CARD_APP_NO VARCHAR(60),
  TXMD_APP_CRYPT VARCHAR(128),
  TXMD_APP_CRYPT_TYP DECIMAL(38),
  TXMD_CARD_APP_EFF VARCHAR(6),
  TXMD_CARD_APP_EXP VARCHAR(6),
  TXMD_APP_PAN_SEQ DECIMAL(38),
  TXMD_CARD_SRVC_CD VARCHAR(10),
  TXMD_TENDER_DATE DATETIME,
  TXMD_VOIDING_LINE BIT DEFAULT 0 NOT NULL,
  TXMD_PARENT_DET_NR SMALLINT,
  TXMD_COMMENT VARCHAR(500),
   LCOUNT BIGINT NOT NULL DEFAULT 0
 );


#product group type
CREATE TABLE PRGP_TYPE(
    PRGT_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    PRGT_CODE VARCHAR(10) NOT NULL,
    PRGT_NAME VARCHAR(60) NOT NULL,
    PRGT_TYPE_CONST BIGINT,
    LCOUNT BIGINT DEFAULT 0 NOT NULL
);


#product group structure
CREATE TABLE PRODGP_STRUCTURE(
    PSTR_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    PSTR_NAME VARCHAR(60) NOT NULL,
    PSTR_DESC VARCHAR(2048),
    PSTR_DATE_FROM datetime ,
    PSTR_DATE_TO datetime ,
    ORGU_ID BIGINT NOT NULL,
    PSTR_IS_LIVE BIT DEFAULT 0 NOT NULL,
    PSTR_MAX_LEVELS BIGINT,
    PSTR_CONSTANT BIGINT,
    LOCN_ID BIGINT,
    LCOUNT BIGINT DEFAULT 0 NOT NULL
);

# define hierarchy of product group structure
CREATE TABLE PRODGP_STRUCTURE_DETAIL(
    PGSD_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    PGSD_LEVEL_NAME VARCHAR(60) NOT NULL,
    PGSD_LEVEL_DESC VARCHAR(2048),
    PGSD_ID_PARENT BIGINT,
    PGSD_LEVEL BIGINT NOT NULL,
    PGSD_MANDATORY BIT DEFAULT 1 NOT NULL,
    PSTR_ID BIGINT NOT NULL,
    PRGT_ID BIGINT NOT NULL,
    LCOUNT BIGINT DEFAULT 0 NOT NULL
);


CREATE TABLE PRODUCT_GROUP(
    PRGP_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    ORGU_ID BIGINT NOT NULL,
    PRGP_CODE VARCHAR(60) NOT NULL,
    PRGT_ID BIGINT NOT NULL,
    PRGP_DESC VARCHAR(2048),
    PRGP_NAME VARCHAR(60) NOT NULL,
    PRGP_CREATED datetime,
    PRGP_MODIFIED datetime,
    PRGP_CAN_BE_MERCH BIT DEFAULT 0 NOT NULL,
    PRGP_MAIN_PRGP_ID BIGINT,
    PRGP_TRADE_START datetime,
    PRGP_TRADE_END datetime,
    LCOUNT BIGINT DEFAULT 0 NOT NULL
);



CREATE TABLE PRODGP_STR_LINK(
    PGSL_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    PGSL_CAN_BE_RANGED BIT DEFAULT 1 NOT NULL,
    PRGP_ID BIGINT NOT NULL,
    PSTR_ID BIGINT NOT NULL,
    PRGP_PARENT_ID BIGINT,
    PRGP_CHILD_ID BIGINT,
    PGSL_DISPLAY_SEQ BIGINT,
    PGSD_ID BIGINT,
    LCOUNT BIGINT DEFAULT 0 NOT NULL
);


CREATE TABLE TAX_RULE_NAME(
    TXRN_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    TXRN_NAME VARCHAR(60) NOT NULL,
    TXRN_CODE VARCHAR(20) NOT NULL,
    LCOUNT BIGINT DEFAULT 0 NOT NULL
);


CREATE TABLE TAX_RULE(
    TXRL_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    TXRL_DATE_FROM datetime NULL,
    TXRL_DATE_TO datetime NULL,
    TXRL_APPLY_SEQ BIGINT NOT NULL,
    TXRL_CUM_TAX BIT DEFAULT 0 NULL,
    TXRL_UPPER_VAL DECIMAL(31,6),
    TXRN_ID BIGINT NOT NULL,
    TXRL_CODE VARCHAR(10) NOT NULL,
    TXRL_DESC VARCHAR(30),
    TXRL_CALC_MTHD BIGINT DEFAULT 1 NULL,
    TXRL_LEGAL_DESC VARCHAR(2048),
    TXRL_ROUNDING_MTHD BIGINT DEFAULT 1,
    TXRL_STEPPED BIT DEFAULT 0 NOT NULL,
    TXRL_ACC_CODE VARCHAR(60),
    LCOUNT BIGINT DEFAULT 0 NOT NULL
);


CREATE TABLE TAX_LEG_VARIANCE(
    TXLV_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    TXRL_ID BIGINT NOT NULL,
    TXLV_RATE DECIMAL(31,6),
    TXLV_DATETIME_FROM datetime NULL,
    TXLV_DATETIME_TO datetime NULL,
    TXLV_CODE VARCHAR(10),
    TXLV_DESC VARCHAR(30),
    TXLV_AMOUNT DECIMAL(31,6),
    TXLV_IS_ACTIVE BIT DEFAULT 0,
    LCOUNT BIGINT DEFAULT 0 NOT NULL
);


CREATE TABLE UNIT_OF_MEASURE(
    UNOM_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    UNOM_CODE VARCHAR(10) NOT NULL,
    UNOM_DESC VARCHAR(2048) NULL,
    UNOM_FACTOR BIGINT NULL,
    UNOM_CREATED datetime NULL,
    UNOM_MODIFIED datetime NULL,
    UNOM_CONSTANT BIGINT,
    UNOM_ID_PARENT BIGINT,
    LCOUNT BIGINT DEFAULT 0 NOT NULL
);


CREATE TABLE PRODUCT(
    PROD_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    PROD_SKU VARCHAR(200) NOT NULL,
    PROD_BARCODE VARCHAR(500),
    REFERENCE VARCHAR(200) NULL,
    ORGU_ID_OWNING BIGINT NOT NULL,
    PROD_NAME VARCHAR(500) NOT NULL,
    CAT_ID_TYPE BIGINT NULL,
    PROD_DESC VARCHAR(2048),
    PROD_OWN_BRAND BIT DEFAULT 0 NOT NULL,
    PROD_URL VARCHAR(2048),
    PROD_CREATED datetime,
    PROD_MODIFIED datetime,
    PROD_RECEIPT_DESC VARCHAR(500),
    PROD_WARRANTY_TERM BIGINT,
    PROD_BRAND VARCHAR(250),
    PROD_IMAGE_DESC VARCHAR(500),
    PROD_URL_THUMB VARCHAR(2048),
    PROD_CLASS VARCHAR(250),
    PROD_WARRANTY_TEXT VARCHAR(255),
    PROD_LOCATION VARCHAR(1000),
    LCOUNT BIGINT DEFAULT 0 NOT NULL,
    DELETED BIT DEFAULT 0 NOT NULL,
    VERIFIED BIT DEFAULT 1 NOT NULL #SET TO 0 WHEN IMPORTED FROM BOQ. USER NEED TO VERIFY AFTER IMPORTING
);


CREATE TABLE PROD_ORGU_LINK(
    PROU_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    PROD_ID BIGINT NOT NULL,
    ORGU_ID BIGINT NOT NULL,
    PROU_REFUNDABLE BIGINT DEFAULT 0 NOT NULL,
    PROU_DISCOUNTABLE BIGINT DEFAULT 0 NOT NULL,
    PROU_CAN_QTY_SALE BIT DEFAULT 1 NOT NULL,
    PROU_FORCE_QTY BIGINT DEFAULT 0 NOT NULL,
    CAT_ID_STATUS BIGINT NOT NULL,
    PROU_REFUND_DAYS BIGINT,
    LCOUNT BIGINT DEFAULT 0 NOT NULL
);


CREATE TABLE PROD_PGRP_LINK(
    PPGL_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    PROD_ID BIGINT NOT NULL,
    PRGP_ID BIGINT NOT NULL,
    PPGL_DISPLAY_SEQ BIGINT,
    PPGL_REL_CONST BIGINT DEFAULT 0 NOT NULL,
    PPGL_PRIORITY BIGINT DEFAULT 0 NOT NULL,
    LCOUNT BIGINT DEFAULT 0 NOT NULL
);


CREATE TABLE SUPP_ORGU_LINK(
    SOL_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    SUPP_ID BIGINT NOT NULL,
    ORGU_ID BIGINT NOT NULL,
    CAT_ID_STATUS BIGINT,
    SOL_CRED_LIMIT DECIMAL(31,6),
    SOL_MIN_ORD_VAL DECIMAL(31,6),
    SOL_LEAD_TIME BIGINT,
    SOL_ORDERING_CODE VARCHAR(10),
    SOL_MIN_PO_QTY DECIMAL(31,4),
    SOL_PAYMENT_DAYS BIGINT,
    SOL_ACC_CODE VARCHAR(60),
    LCOUNT BIGINT DEFAULT 0 NOT NULL
);


CREATE TABLE SUPP_PROD_PRICE(
    SPRC_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    SOL_ID BIGINT NOT NULL,
    PROD_ID BIGINT NOT NULL,
    CATALOGUE_NO VARCHAR(60),
    PART_NO VARCHAR(60),
    UNOM_ID_CONTENT BIGINT,
    UNOM_ID BIGINT NOT NULL,
    UNOM_QTY DECIMAL(31,4) NOT NULL,
    PRICE DECIMAL(31,6),  #AFTER TAX
    COST_BEFORE_TAX DECIMAL(31,6),  #COST BEFORE TAX
    BULK_PRICE DECIMAL(31,6), #AFTER TAX
    BULK_PRICE_BEFORE_TAX DECIMAL(31,6), #BEFORE TAX
    BULK_QTY DECIMAL(31,4),
    LEGT_ID BIGINT,
    TXLV_ID BIGINT,
    SPRC_MIN_ORD_QTY DECIMAL(31,4),
    SPRC_LEAD_TIME BIGINT,
    SPRC_CREATED DATETIME NULL,
    SPRC_MODIFIED DATETIME NULL,
    SPRC_PREFER_BUY BIT DEFAULT 0 NOT NULL,
    SPRC_MIN_ORD_VAL DECIMAL(31,6),
    LCOUNT BIGINT DEFAULT 0 NOT NULL,
    BULK_QTY2 DECIMAL(31,4),
    BULK_PRICE2 DECIMAL(31,6), #AFTER TAX
    BULK_QTY3 DECIMAL(31,4),
    BULK_PRICE3 DECIMAL(31,6), #AFTER TAX
    BULK_QTY4 DECIMAL(31,4),
    BULK_PRICE4 DECIMAL(31,6), #AFTER TAX
    BULK_QTY5 DECIMAL(31,4),
    BULK_PRICE5 DECIMAL(31,6), #AFTER TAX
    SUPPLIER_DELETED BIT DEFAULT 0 NOT NULL,
    PRODUCT_DELETED BIT DEFAULT 0 NOT NULL

);


CREATE TABLE PRODUCT_METRIC(
    PRDM_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    PROD_ID BIGINT NOT NULL,
    PRDM_DRY_WEIGHT DECIMAL(31,4),
    UNOM_ID_DRY_WEIGHT BIGINT,
    PRDM_WEIGHT DECIMAL(31,4),
    UNOM_ID_WEIGHT BIGINT,
    PRDM_VOLUME DECIMAL(31,4),
    UNOM_ID_VOLUME BIGINT,
    PRDM_QUANTITY DECIMAL(31,4),
    PRDM_PER_UNIT DECIMAL(31,4),
    UNOM_ID_PER_UNIT BIGINT,
    PRDM_CASE_SIZE BIGINT,
    PRDM_NUM_LABELS BIGINT,
    PRDM_BARCODE_LOCAL BIGINT DEFAULT 0 NOT NULL,
    PRDM_LENGTH DECIMAL(31,4),
    UNOM_ID_LENGTH BIGINT,
    PRDM_DIM_HEIGHT DECIMAL(31,4),
    PRDM_DIM_WIDTH DECIMAL(31,4),
    PRDM_DIM_LENGTH DECIMAL(31,4),
    UNOM_ID_DIM BIGINT,
    PRDM_USAGE DECIMAL(31,4),
    UNOM_ID_USAGE BIGINT,
    UNOM_ID_UNIT BIGINT,
    LCOUNT BIGINT DEFAULT 0
);


CREATE TABLE PRICE_CODE(
    PRCC_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    PRCC_NAME VARCHAR(60) NOT NULL,
    PRCC_CODE VARCHAR(10) NOT NULL,
    PRCC_CREATED datetime NOT NULL,
    LCOUNT BIGINT DEFAULT 0 NOT NULL
);


CREATE TABLE PRICE(
    PRCE_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    PROD_ID BIGINT NOT NULL,
    PRIB_ID BIGINT NOT NULL,
    PRCC_ID BIGINT NOT NULL,
    MARGIN DECIMAL(31,6),
    PRCE_FROM_DATE datetime NULL,
    PRCE_TO_DATE datetime NULL,
    PRCE_PRICE DECIMAL(31,6) NOT NULL,
    PRCE_CREATED datetime NULL,
    PRCE_MODIFIED datetime NULL,
    PRCE_TAX_INCLUDED BIT DEFAULT 0 NOT NULL,
    UNOM_ID BIGINT,
    UNOM_QTY DECIMAL(31,4) NOT NULL,
    PRCE_SET_CENTRAL BIT DEFAULT 1 NOT NULL,
    PRCE_REDUCED BIT DEFAULT 0 NOT NULL,
    LCOUNT BIGINT DEFAULT 0 NOT NULL
);


CREATE TABLE PROD_TYPE(
    PRTY_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    PRTY_NAME VARCHAR(60) NOT NULL,
    PRTY_CONST BIGINT NOT NULL,
    PRTY_PRODUCT_TYPE BIGINT NOT NULL,
    LCOUNT BIGINT DEFAULT 0 NOT NULL
);



CREATE TABLE PROD_TO_PROD_LINK(
    PRTY_ID BIGINT NOT NULL,
    PROD_ID_FROM BIGINT NOT NULL,
    PROD_ID_TO BIGINT NOT NULL,
    PTPL_COMPONENT_QTY DECIMAL(31,4) DEFAULT 1,
    PTPL_KIT_ONLY BIT DEFAULT 0,
    PTPL_COMP_MERCH BIT DEFAULT 0 NOT NULL,
    PTPL_SEQUENCE_NO BIGINT NOT NULL,
    UNOM_ID BIGINT NOT NULL,
    PTPL_DESC VARCHAR(2048),
    LCOUNT BIGINT DEFAULT 0 NOT NULL
);


CREATE TABLE PROU_TXRL_LINK(
    PROU_ID BIGINT NOT NULL,
    TXRL_ID BIGINT NOT NULL,
    LCOUNT BIGINT DEFAULT 0
);


CREATE TABLE PURCHASE_ORDER_HEADER (
    POH_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    ORGU_ID BIGINT NOT NULL,
    POH_ORDER_NUMBER VARCHAR(100),
  	SUPPLIER_ID BIGINT,
    POH_SUPP_REF VARCHAR(100),
    POH_SUPP_CONTACT VARCHAR(60),
    POH_CREATED_DATE datetime,
    POH_LAST_MODIFIED_DATE datetime,
    POH_LAST_MODIFIED_BY BIGINT,
    POH_LAST_DELV_DATE datetime,
    POH_CANCELLED BIT DEFAULT 0,
    POH_APPROVED BIT DEFAULT 0,
    POH_DELV_NAME VARCHAR(60),
    POH_DELV_ADDRESS VARCHAR(500),
    POH_DELV_PHONE VARCHAR(100),
    POH_DELV_MOBILE VARCHAR(100),
    POH_DELV_DATE datetime,
    POH_EXP_TRANSMIT datetime,
    POH_EXP_DELIVERY datetime,
    POH_ACT_TRANSMIT datetime,
    POH_CONFIRM_DATE datetime,
    POH_VALUE_GROSS DECIMAL(31,6) DEFAULT 0 NOT NULL,
    POH_VALUE_NETT DECIMAL(31,6),
    POH_VALUE_TAX DECIMAL(31,6),
    POH_TOTAL_QTY DECIMAL(31,4),
    POH_TOTAL_LINES DECIMAL(31,4),
    POH_TYPE BIGINT,
    POH_STATUS BIGINT NOT NULL,
    POH_COMMENT VARCHAR(1000),
    POH_CREATION_TYPE BIGINT,
    POH_PREFIX VARCHAR(200),
    POH_DLV_ADDRESS VARCHAR(1000),
    POH_CONTACT_PERSON VARCHAR(200),
    POH_CONTACT_PHONE VARCHAR(50),
    POH_EMAIL_TO VARCHAR(100),
    POH_REVISION BIGINT default 0,
    POH_PRINTED BIT DEFAULT 0,
    COSTS_INCLUDE_TAX BIT DEFAULT 0,
    POH_PRJ_NAME VARCHAR(1000),
    POH_PRJ_CODE VARCHAR(500)
);


CREATE TABLE PURCHASE_LINE(
    POL_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    POH_ID BIGINT NOT NULL,
    POH_ORDER_NUMBER VARCHAR(100) NOT NULL,
    POL_LINE_NUMBER BIGINT NOT NULL,
    SPRC_ID BIGINT,
    POL_PROD_ID BIGINT,
    POL_SUPP_ID BIGINT,
    POL_UNIT_COST DECIMAL(31,6),
    POL_PRICE DECIMAL(31,6), # COST BEFORE TAX
    POL_SPECIAL_BUY BIT DEFAULT 0 NOT NULL,
    TXLV_ID BIGINT, #TAX CODE
    POL_VALUE_TAX DECIMAL(31,6), # TAX VALUE FOR THIS LINE : POL_QTY_ORDERED * (POL_PRICE * TAX_RATE)
    UNOM_ID BIGINT, #CASE SIZE
    POL_QTY_ORDERED DECIMAL(31,4),
    POL_QTY_RESERVED DECIMAL(31,4),
    POL_QTY_CANCELLED DECIMAL(31,4),
    POL_QTY_RECEIVED DECIMAL(31,4),
    POL_QTY_INVOICED DECIMAL(31,4),
    POL_VALUE_ORDERED DECIMAL(31,6), # TOTAL NET VALUE OF THIS LINE AFTER TAX :POL_QTY_ORDERED * (POL_PRICE + POL_PRICE * TAX_RATE)
    POL_VALUE_GROSS DECIMAL(31,6), # TOTAL GROSS VALUE OF THIS LINE BEFORE TAX :POL_QTY_ORDERED * (POL_PRICE )
    POL_VALUE_RECEIVED DECIMAL(31,6),
    POL_VALUE_INVOICED DECIMAL(31,6),
    POL_FREE_TEXT VARCHAR(255),
    POL_MODIFIED datetime ,
    POL_DATE_RECEIVED datetime,
    POL_PRICE_CHECKED BIT DEFAULT 0 NOT NULL,
    POL_ID_PARENT_LINE BIGINT,
    POL_QTY_COUNTED DECIMAL(31,4),
    POL_CONTENTS DECIMAL(31,4), #CASE CONTAINS HOW MANY PRODUCT
    UNOM_ID_CONTENTS BIGINT, #PRODUCT SIZE
    POL_STATUS BIGINT,
    POL_CREATION_TYPE BIGINT,
    LCOUNT BIGINT DEFAULT 0
);

CREATE TABLE PO_BOQ_LINK(
    PBQL_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    POH_ID BIGINT NOT NULL,
    POH_ORDER_NUMBER VARCHAR(100),
    POL_ID BIGINT,
    BOQ_ID BIGINT,
    BOQ_NAME VARCHAR(100),
    PROJECT_ID BIGINT NOT NULL,
    PROJECT_CODE VARCHAR(100),
    BOQ_DETAIL_ID BIGINT,
    BOQ_QTY_TOTAL DECIMAL(31,4),
    PO_QTY_RECEIVED DECIMAL(31,4),
    BOQ_QTY_BALANCE DECIMAL(31,4),
    COMMENT VARCHAR(1000),
    BPQL_STATUS BIGINT
);

CREATE TABLE PO_SO_LINK(
    POSO_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    POH_ID BIGINT NOT NULL,
    POH_ORDER_NUMBER VARCHAR(100),
    POL_ID BIGINT,
    TXHD_ID BIGINT,
    PROJECT_ID BIGINT NOT NULL,
    PROJECT_CODE VARCHAR(100),
    TXDE_ID BIGINT,
    SO_LINE_QTY_TOTAL DECIMAL(31,4),
    PO_QTY_RECEIVED DECIMAL(31,4),
    SO_LINE_QTY_BALANCE DECIMAL(31,4),
    COMMENT VARCHAR(1000),
    POSO_STATUS BIGINT
);


CREATE TABLE DELIVERY_NOTE_HEADER (
    DELN_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    ORGU_ID BIGINT NOT NULL,
    DELN_NOTE_NUMBER VARCHAR(100),
    DELN_GRN VARCHAR(100),
    POH_ID BIGINT,
    POH_ORDER_NUMBER VARCHAR(100),
  	SUPPLIER_ID BIGINT,
    DELN_DELIVERY_DATE datetime,
    DELN_CREATED_DATE datetime,
    DELN_LAST_MODIFIED_DATE datetime,
    DELN_LAST_MODIFIED_BY BIGINT,
    DELN_VALUE_GROSS DECIMAL(31,6),
    DELN_VALUE_NETT DECIMAL(31,6),
    POH_QTY_ORDERED DECIMAL(31,4),
    DELN_TOTAL_QTY DECIMAL(31,4),
    DELN_TOTAL_LINES DECIMAL(31,4),
    DELN_TYPE BIGINT,
    DELN_STATUS BIGINT NOT NULL,
    DELN_COMMENT VARCHAR(4000),
    LEGT_ID BIGINT,
    FREIGHT_TXRL_ID BIGINT,
    FREIGHT_AMOUNT DECIMAL(31,6),
    FREIGHT_TAX DECIMAL(31,6),
    FREIGHT_TAX_CODE VARCHAR (50),
    DELN_SURCHARGE DECIMAL(31,6),
    DELN_TOTAL DECIMAL(31,6),
    DELN_TAX DECIMAL(31,6),
    ACC_EXPORTED BIT DEFAULT 0 NOT NULL,
    COSTS_INCLUDE_TAX BIT DEFAULT 0,
    DELN_PRJ_CODE VARCHAR(500)
);


CREATE TABLE DELIVERY_NOTE_LINE(
    DLNL_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    DELN_ID BIGINT NOT NULL,
    POL_ID BIGINT, #PURCHASE ORDER LINE
    DELN_GRN VARCHAR(100),
    DLNL_LINE_NUMBER BIGINT,
    SPRC_ID BIGINT,
    DLNL_CASE_SIZE BIGINT,  #UNIT OF MEASURE OF THE DELIVERY STATED ON THE DELIVERY NOTE: BOX ....
    DLNL_PRODUCT_SIZE BIGINT,  #UNIT OF MEASURE OF THE PRODUCT EACH ...
    DLNL_UNIT_COST DECIMAL(31,6), # UNITCOST STATED ON THE DELIVERY NOTE OF THE SUPPLIER
    DLNL_QTY DECIMAL(31,4),
    POL_QTY DECIMAL(31,4),
    RCVD_CASE_SIZE BIGINT,  #UNIT OF MEASURE OF THE ACTUAL DELIVERY : BOX ....
    RCVD_PRODUCT_SIZE BIGINT,  #UNIT OF MEASURE OF THE PRODUCT OF ACTUAL DELIVERY EACH ...
    RCVD_QTY DECIMAL(31,4), # ACTUAL RECEIVED
    TOTAL_RCVD_QTY DECIMAL(31,4), # TOTAL ACTUAL RECEIVED SO FAR
    DLNL_VALUE_TAX DECIMAL(31,6),
    DLNL_VALUE_GROSS DECIMAL(31,6),
    TOTAL_COST DECIMAL(31,6),
    TXLV_ID BIGINT, #TAX CODE
    DLNL_QTY_REJECTED DECIMAL(31,4),
    DLNL_STATUS BIGINT,
    DLNL_DISCREPANCY BIT DEFAULT 0 NOT NULL,
    DLNL_COMMENT VARCHAR(4000)
);

CREATE TABLE PO_DEL_NOTE_LINK(
    PODLVL_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    POH_ID BIGINT NOT NULL,
    POH_ORDER_NUMBER VARCHAR(100),
    DELN_ID BIGINT,
    DELN_NOTE_NUMBER VARCHAR(100),
    DELN_GRN VARCHAR(100),
    DELN_DELIVERY_DATE datetime
);


CREATE TABLE APP_USER(
    USR_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    USR_NAME VARCHAR(100) NOT NULL,
    USR_PASS VARCHAR(500) NULL,
    USR_FIRST_NAME VARCHAR(200) NULL,
    USR_SUR_NAME VARCHAR(200) NULL,
    USR_ACTIVE BIT DEFAULT 1 NOT NULL,
    USR_DELETED BIT DEFAULT 0 NOT NULL,
    USR_LOGED_ON BIT DEFAULT 0 NOT NULL
);

CREATE TABLE APP_ROLE(
    ROLE_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    ROLE_CODE VARCHAR(100) NULL,
    ROLE_NAME VARCHAR(500) NOT NULL,
    ROLE_DELETED BIT DEFAULT 0 NOT NULL,
    ROLE_DESC VARCHAR(500) NULL
);

CREATE TABLE APP_USER_ROLE(
    OP_ROLE_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    USR_ID BIGINT NOT NULL,
    ROLE_ID BIGINT NOT NULL
);

CREATE TABLE ACCESS_POINT(
    ACPT_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    ACPT_NAME VARCHAR(200) NOT NULL,
    ACPT_TOKEN VARCHAR(100) NOT NULL,
    ACPT_HELP_URL VARCHAR(1000) NULL,
    ACPT_DESC VARCHAR(1000) NULL
);

CREATE TABLE USER_ACCESS(
    USR_ACS_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    USR_ID BIGINT NOT NULL,
    ACPT_ID BIGINT NOT NULL
);

CREATE TABLE ROLE_ACCESS(
    ROLE_ACS_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    ROLE_ID BIGINT NOT NULL,
    ACPT_ID BIGINT NOT NULL
);

#PHYSICAL LOCATION OF STOCK.
CREATE TABLE STOCK_LOCATION(
    STCK_LOCN_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    STCK_LOCN_CODE VARCHAR(100) NULL,
    STCK_LOCN_NAME VARCHAR(100) NULL,
    STCK_LOCN_ADDRESS VARCHAR(500) NULL,
    ORGU_ID BIGINT,
    STORE_ID BIGINT
);

CREATE TABLE STOCK(
    STCK_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    SUPPLIER_ID BIGINT NULL,
    PROD_ID BIGINT NOT NULL,
    PRGP_ID BIGINT,
    SELC_ID BIGINT,
    ORGU_ID_LOCATION BIGINT NOT NULL,
    STCK_QTY DECIMAL(31,4) NOT NULL,
    UNOM_ID BIGINT,
    STCK_COND BIGINT NOT NULL,
    STCK_CAT BIGINT NOT NULL,
    STCK_LOCN_ID BIGINT,
    ORGU_ID_RESPBILITY BIGINT,
    STCK_VALUE DECIMAL(31,6),
    STCK_LAST_VERIFIED datetime,
    LEGT_ID BIGINT
);

CREATE TABLE STOCK_RESERVE(
    STCK_RSV_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    STCK_ID BIGINT NOT NULL,
    ORGU_ID BIGINT,
    STORE_ID BIGINT,
    SUPPLIER_ID BIGINT NULL,
    PROD_ID BIGINT NOT NULL,
    PRGP_ID BIGINT,
    TXN_TYPE VARCHAR(200), #TRANSACTION TYPE TRIGGERED THIS EVENT: SALE ORDER, INVOICE, BILL OF QUANTITY ...
    TXN_HEADER_ID BIGINT,
    TXN_LINE_ID BIGINT,
    TXN_NUMBER VARCHAR(200),
    QTY_RESERVED DECIMAL(31,4)
);

CREATE TABLE STOCK_EVENT(
    STCK_EVNT_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    STCK_ID BIGINT,
    ORGU_ID BIGINT,
    STORE_ID BIGINT,
    USR_ID BIGINT,
    SUPPLIER_ID BIGINT NULL,
    UNOM_ID BIGINT,
    PROD_ID BIGINT NOT NULL,
    PRGP_ID BIGINT,
    SELC_ID BIGINT,
    STCK_EVNT_DATE datetime,
    TXN_DATE datetime,
    TXN_TYPE BIGINT, # EVENT TYPE
    TXN_TYPE_RESERVED_FOR VARCHAR(200), #TRANSACTION TYPE TRIGGERED THIS EVENT: SALE ORDER, INVOICE, BILL OF QUANTITY ...
    TXN_HEADER BIGINT,
    TXN_LINE BIGINT,
    TXN_NUMBER VARCHAR(100),
    TXN_ID_RESERVED_FOR BIGINT,
    TXN_NR_RESERVED_FOR VARCHAR(200),
    TXN_ITEM_RESERVED_FOR BIGINT,
    STCK_LOCN_ID BIGINT,
    STCK_QTY DECIMAL(31,4) NOT NULL,
    SELL_PRICE DECIMAL(31,6),
    COST_PRICE DECIMAL(31,6),
    STCK_COND BIGINT,
    STCK_CAT BIGINT
);

CREATE TABLE INVOICE (
    TXIV_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    TXHD_ID BIGINT,
    ORGU_ID BIGINT NOT NULL,
    STORE_ID BIGINT NOT NULL,
    TXIV_TXN_NR varchar(200),
    TXIV_PO_NR varchar(200),
    TXHD_TXN_NR varchar(200),
    TXIV_TRADING_DATE datetime,
    TXIV_OPERATOR BIGINT,
    TXIV_VALUE_GROSS DECIMAL(31,6),
    TXIV_VALUE_NETT DECIMAL(31,6),
    TXIV_VALUE_DUE DECIMAL(31,6),
    TXIV_VALUE_CHANGE DECIMAL(31,6),
    TXIV_VAL_ROUNDING DECIMAL(31,6),
    TXIV_VALUE_TAXABLE DECIMAL(31,6),
    TXIV_VALUE_TAX DECIMAL(31,6),
    TXIV_RECEIPT_ID VARCHAR(50),
    CUSTOMER_ID BIGINT,
    TXIV_REFUND_EXPIRY datetime,
    TXIV_COLLECT_DATE datetime,
    TXIV_DLV_ADDRESS varchar(2000),
    TXIV_TXN_TYPE BIGINT,
    TXIV_CONTACT_PERSON VARCHAR(500),
    TXIV_CONTACT_PHONE VARCHAR(50),
    TXIV_EMAIL_TO VARCHAR(100),
    TXIV_PRINTED BIT DEFAULT 0,
    TXIV_FULLY_REFUNDED BIT DEFAULT 0,
    TXIV_PRJ_CODE VARCHAR(500),
    TXIV_IMPORTED BIT DEFAULT 0,
    TXIV_IMPORT_TIME datetime
);


CREATE TABLE INVOICE_DETAIL (
    TXID_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    TXIV_ID BIGINT,
    TXDE_ID BIGINT,
    ORGU_ID BIGINT NOT NULL,
    STORE_ID BIGINT NOT NULL,
    TXID_QTY_INVOICED DECIMAL(31,4),
    TXID_QTY_REFUND DECIMAL(31,4),
    TXID_PRICE_SOLD DECIMAL(31,6),
    TXID_SURCHARGE DECIMAL(31,6) DEFAULT 0.00,
    TXID_LINE_TYPE BIGINT
);


CREATE TABLE INVOICE_MEDIA (
    TXIM_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    TXIV_ID BIGINT,
    TXMD_ID BIGINT,
    ORGU_ID BIGINT NOT NULL,
    STORE_ID BIGINT NOT NULL,
    TXIM_LINE_TYPE BIGINT
);


#CUSTOMER ACCOUNT DEBT PAYMENT
CREATE TABLE TXN_ACC_PAYMENT (
    TAP_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
    TXHD_ID BIGINT,
    CAD_ID BIGINT,
    ORGU_ID BIGINT ,
    STORE_ID BIGINT,
    TAP_PAYMENT_DATE datetime,
    TAP_AMOUNT_PAID DECIMAL(31,6)
);



#CASH FLOW MANAGEMENT
CREATE TABLE CASH_SESSION  (
   CSSN_SESSION_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
   ORGU_ID BIGINT NOT NULL,
   STORE_ID BIGINT NOT NULL,
   TILL_SHORT_DESC VARCHAR(200),
   CSSN_OPERATOR BIGINT,
   CSSN_TRADING_DATE datetime,
   CSSN_STATUS BIGINT NOT NULL,
   CSSN_START_DATE datetime,
   CSSN_IMBALANCE_RSN VARCHAR(500),
   CSSN_TXN_NR VARCHAR(100),
   CSSN_FORCED BIT DEFAULT 0 NOT NULL,
   CSSN_IS_OP_ACC BIT DEFAULT 1 NOT NULL,
   CSSN_SAP_CTRL_NR VARCHAR(100),
   CSSN_EXP_END_DATE datetime,
   CSSN_ACT_END_DATE datetime,
   CSSN_RECOCILE_DATE datetime,
   CSSN_METHOD_OPEN BIGINT,
   CSSN_METHOD_CLOSE BIGINT,
   CSSN_CYCLE_PERIOD BIGINT,
   CSSN_CURRENT_CASH DECIMAL(31,6),
   CSSN_TOTAL_FLOAT DECIMAL(31,6) NOT NULL DEFAULT 0,
   CSSN_TOTAL_PICKUP DECIMAL(31,6) NOT NULL DEFAULT 0,
   ACC_EXPORTED BIT DEFAULT 0 NOT NULL
   );


CREATE TABLE SESSION_EVENT  (
   SEEV_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
   CSSN_SESSION_ID BIGINT NOT NULL,
   ORGU_ID BIGINT NOT NULL,
   STORE_ID BIGINT NOT NULL,
   SEEV_EVENT_TYPE BIGINT NOT NULL,
   SEEV_EVENT_DATE datetime,
   SEEV_OPERATOR BIGINT,
   SEEV_REFERENCE VARCHAR(500),
   SEEV_COMMENT VARCHAR(500),
   SEEV_REASON VARCHAR(500),
   SEEV_COLLECT_DATE datetime,
   SEEV_COLLECT_REF VARCHAR(500),
   SEEV_PICKUP_NR VARCHAR(500),
   SEEV_PAY_IN_SLIP VARCHAR(500)
   );


CREATE TABLE SESSION_TOTAL  (
   SETL_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
   CSSN_SESSION_ID BIGINT NOT NULL,
   MEDT_ID BIGINT,
   PAYM_ID BIGINT,
   MEDIA_TOTAL_COUNT DECIMAL(31,4),
   MEDIA_TOTAL_VALUE DECIMAL(38,6) NOT NULL DEFAULT 0
   );



CREATE TABLE SESSION_MEDIA  (
   SEME_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
   CSSN_SESSION_ID BIGINT NOT NULL,
   SEEV_ID BIGINT NOT NULL,
   ORGU_ID BIGINT NOT NULL,
   STORE_ID BIGINT NOT NULL,
   MEDT_ID BIGINT,
   PAYM_ID BIGINT,
   SEME_MEDIA_COUNT DECIMAL(31,4),
   SEME_MEDIA_VALUE DECIMAL(38,6) NOT NULL DEFAULT 0,
   TXMD_ID BIGINT
   );


#DETAIL FOR SOME SESSION EVENT LIKE RECONCILIATION.
CREATE TABLE SESSION_EVENT_DETAIL  (
   SEDE_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
   CSSN_SESSION_ID BIGINT NOT NULL,
   SEEV_ID BIGINT,
   ORGU_ID BIGINT NOT NULL,
   STORE_ID BIGINT NOT NULL,
   MEDT_ID BIGINT,
   PAYM_ID BIGINT,
   MEDIA_COUNT_ACTUAL DECIMAL(31,4),
   MEDIA_COUNT_EXPECTED DECIMAL(31,4),
   MEDIA_COUNT_DIFF DECIMAL(31,4),
   MEDIA_VALUE_ACTUAL DECIMAL(38,6) NOT NULL DEFAULT 0,
   MEDIA_VALUE_EXPECTED DECIMAL(38,6) NOT NULL DEFAULT 0,
   MEDIA_VALUE_DIFF DECIMAL(38,6) NOT NULL DEFAULT 0,
   SEDE_COMMENT VARCHAR(500)
   );



CREATE TABLE TXN_SESSION_LINK  (
   TSL_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
   CSSN_SESSION_ID BIGINT NOT NULL,
   TXN_ID BIGINT,
   TXN_TYPE BIGINT,
   ORGU_ID BIGINT NOT NULL,
   STORE_ID BIGINT NOT NULL,
   TILL_SHORT_DESC VARCHAR(100),
   TXHD_TXN_NR VARCHAR(100),
   TSL_DATE_CREATED datetime
   );



CREATE TABLE TOTAL_SALE_OPERATOR  (
   TOOP_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
   TOOP_OPERATOR BIGINT,
   TOOP_TXN_TYPE BIGINT,
   ORGU_ID BIGINT NOT NULL,
   STORE_ID BIGINT NOT NULL,
   TOOP_TRADING_DATE datetime,
   TOOP_SALE_QTY DECIMAL(31,4) NOT NULL DEFAULT 0, #TOTAL SALE ITEMS
   TOOP_ITEMS_VALUE DECIMAL(38,6) NOT NULL DEFAULT 0, # ITEM COST
   TOOP_PROFIT_VALUE DECIMAL(38,6) NOT NULL DEFAULT 0, # PROFIT GAINED ON SELLING ITEMS
   TOOP_TAXED_VALUE DECIMAL(38,6) NOT NULL DEFAULT 0, # VALUE ELIGIBLE FOR TAX
   TOOP_TAX_PAID DECIMAL(38,6) NOT NULL DEFAULT 0, # AMOUNT PAID FOR TAX
   TOOP_SALE_VALUE DECIMAL(38,6) NOT NULL DEFAULT 0, # ITEM VALUE + PROFIT VALUE + TAXED PAID
   TOOP_REFUND_QTY DECIMAL(31,4) NOT NULL DEFAULT 0, # TOTAL REFUND ITEMS
   TOOP_REFUND_VALUE DECIMAL(38,6) NOT NULL DEFAULT 0,
   TOOP_DISCOUNT_VALUE DECIMAL(38,6) NOT NULL DEFAULT 0, # DISCOUNT APPLIED OT ITEMS
   TOOP_VOID_QTY DECIMAL(31,4) NOT NULL DEFAULT 0, # TOTAL REFUND ITEMS
   TOOP_VOID_VALUE DECIMAL(38,6) NOT NULL DEFAULT 0
   );


CREATE TABLE TOTAL_TAX_GROUP  (
   ORGU_ID BIGINT NOT NULL,
   STORE_ID BIGINT NOT NULL,
   TOTG_TXRL_ID BIGINT NOT NULL,
   TOTG_TRADING_DATE datetime NOT NULL,
   TOTG_TXGP_CODE VARCHAR(10) NOT NULL,
   TOTG_TAXED_VALUE DECIMAL(38,6) NOT NULL DEFAULT 0,
   TOTG_TAX DECIMAL(38,6) NOT NULL DEFAULT 0,
   TOTG_TOT_SALES_QTY DECIMAL(31,4)
   );



CREATE TABLE TOTAL_MEDIA_OPERATOR  (
   TOMO_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
   TOMO_OPERATOR BIGINT NOT NULL,
   ORGU_ID BIGINT NOT NULL,
   STORE_ID BIGINT NOT NULL,
   TOMO_TRADING_DATE datetime NOT NULL,
   MEDT_ID BIGINT,
   PAYM_ID BIGINT,
   TOMO_SALE_QTY DECIMAL(31,4) NOT NULL DEFAULT 0,
   TOMO_SALE_VALUE DECIMAL(38,6) NOT NULL DEFAULT 0,
   TOMO_REFUND_QTY DECIMAL(31,4) NOT NULL DEFAULT 0,
   TOMO_REFUMND_VALUE DECIMAL(38,6) NOT NULL DEFAULT 0,
   TOMO_CASHBACK_QTY DECIMAL(31,4) NOT NULL DEFAULT 0,
   TOMO_CASHBACK_VALUE DECIMAL(38,6) NOT NULL DEFAULT 0
   );


CREATE TABLE ACCOUNT  (
   ACC_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
   ORGU_ID BIGINT NOT NULL,
   ACC_TYPE BIGINT NOT NULL,
   ACC_CODE VARCHAR(50),
   ACC_NAME VARCHAR(100),
   ACC_DESC VARCHAR(500)
   );


CREATE TABLE JOURNAL_ENTRY  (
   JRN_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
   ORGU_ID BIGINT NOT NULL,
   CSSN_SESSION_ID BIGINT NOT NULL,
   SRC_TXN_TYPE BIGINT,
   SRC_TXN_ID BIGINT,
   APP_USER_ID BIGINT NOT NULL,
   ACC_ID BIGINT NOT NULL,
   JRN_ACC_CODE VARCHAR(50),
   JRN_ACC_DESC VARCHAR(100),
   JRN_DEBIT DECIMAL(38,6),
   JRN_CREDIT DECIMAL(38,6),
   JRN_DATE datetime,
   JRN_TAX_CODE VARCHAR(100),
   JRN_ACTUAL BIT DEFAULT 1 # NON ACTUAL ENTRIES LIKE BANK ACCOUNTS(0) DOSE NOT SHOW ON JOURNAL BECAUSE IT GET REPLACED AT RECONCILIATION BY ACTUAL VALUE
   );


CREATE TABLE JOURNAL_SUPPORT  (
     JRN_ID BIGINT NOT NULL,
     TXMD_ID BIGINT NOT NULL
   );



CREATE TABLE JOURNAL_RULE  (
   JRNR_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
   ORGU_ID BIGINT NOT NULL,
   TXN_TYPE BIGINT NOT NULL,
   JRNR_ACTION BIGINT NOT NULL,
   ACC_ID BIGINT NOT NULL,
   JRNR_ACC_CODE VARCHAR(50),
   JRNR_ACC_DESC VARCHAR(500),
   JRNR_DEBIT BIT DEFAULT 0,
   JRNR_CREDIT BIT DEFAULT 0,
   JRNR_ACTUAL BIT DEFAULT 1 # NON ACTUAL ENTRIES LIKE BANK ACCOUNTS(0) DOSE NOT SHOW ON JOURNAL BECAUSE IT GET REPLACED AT RECONCILIATION BY ACTUAL VALUE
   );



CREATE TABLE ACCOUNTING_EXPORT  (
     ACC_EXP_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
     ORGU_ID BIGINT NOT NULL,
     STORE_ID BIGINT NOT NULL,
     APP_USER_ID BIGINT NOT NULL,
     EXPORT_SUPPLIERS BIT DEFAULT 0,
     EXPORT_DELIVERY_NOTES BIT DEFAULT 0,
     EXPORT_JOURNAL_ENTRIES BIT DEFAULT 0,
     EXPORTED_CONTENT VARCHAR(10000),
     EXPORT_TIME datetime
   );


CREATE TABLE ACC_EXPORT_SUPP_LINK  (
     ACC_EXP_ID BIGINT NOT NULL,
     SUPPLIER_ID BIGINT NOT NULL
   );


CREATE TABLE ACC_EXPORT_DELN_LINK  (
     ACC_EXP_ID BIGINT NOT NULL,
     DELN_ID BIGINT NOT NULL
   );


CREATE TABLE ACC_EXPORT_SESSION_LINK  (
     ACC_EXP_ID BIGINT NOT NULL,
     CSSN_SESSION_ID BIGINT NOT NULL
   );


CREATE TABLE DEPARTMENT  (
     DEPT_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
     DEPT_NAME VARCHAR (200) NOT NULL,
     DEPT_CODE VARCHAR (50),
     ACTIVE BIT DEFAULT 1,
     DEPT_DESC VARCHAR (500)
   );


CREATE TABLE CATEGORY_HEADING  (
     CATH_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
     CATH_NAME VARCHAR (200) NOT NULL,
     CATH_CODE VARCHAR (50),
     ACTIVE BIT DEFAULT 1,
     CATH_DESC VARCHAR (500)
   );


CREATE TABLE CATEGORY_VALUE  (
     CATV_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
     CATH_ID BIGINT NOT NULL,
     ACTIVE BIT DEFAULT 1,
     CAT_VALUE VARCHAR (500) NOT NULL
   );


CREATE TABLE DEPT_CATEGORY  (
     DEPT_CAT_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
     DEPT_ID BIGINT NOT NULL,
     CATH_TYPE_CONST VARCHAR (50),
     LEVEL DECIMAL (5,0),
     ACTIVE BIT DEFAULT 1,
     CATH_ID BIGINT NOT NULL
   );


CREATE TABLE DEPT_CATEGORY_VALUE  (
     DEPT_CAT_VAL_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
     DEPT_CAT_ID BIGINT NOT NULL,
     DEPT_ID BIGINT NOT NULL,
     CATH_ID BIGINT NOT NULL,
     CATV_ID BIGINT NOT NULL
   );


CREATE TABLE PROD_DEPT_CAT  (
     ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
     ORGU_ID BIGINT NOT NULL,
     PROD_ID BIGINT NOT NULL,
     DEPT_ID BIGINT NOT NULL,    # ONE DEFAULT DEPARTMENT SHOULD BE DEFINED
     CAT_ID BIGINT,
     LEVEL DECIMAL (5,0),
     CAT_VAL_ID BIGINT
   );


CREATE TABLE REPORT_GROUP  (
     REP_GRP_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
     REP_GRP_NAME VARCHAR (200) NOT NULL,
     DISPLAY_ORDER DECIMAL (5,0),
     REP_GRP_TEXT VARCHAR (500)
   );


CREATE TABLE REPORT_HEADING  (
     REP_HEAD_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
     REP_GRP_ID BIGINT NOT NULL,
     REP_HEAD_NAME VARCHAR (200) NOT NULL,
     DISPLAY_ORDER DECIMAL (5,0),
     REP_HEAD_TEXT VARCHAR (500)
   );


CREATE TABLE REPORT_PARAM  (
     REP_PARAM_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
     REP_HEAD_ID BIGINT NOT NULL,
     REP_PARAM_NAME VARCHAR (200) NOT NULL,
     TABLE_ALIAS VARCHAR (100)
   );


CREATE TABLE REPORT_PARAM_VAL  (
     REP_PAR_VAL_ID BIGINT UNIQUE AUTO_INCREMENT NOT NULL,
     REP_PARAM_ID BIGINT NOT NULL,
     REP_PARAM_KEY VARCHAR (50) ,
     REP_PARAM_VAL VARCHAR (200) NOT NULL,
     TABLE_ALIAS VARCHAR (100),
     DISPLAY_ORDER DECIMAL (5,0)
   );



ALTER TABLE CUSTOMER ADD CONSTRAINT CUSTOMER_PK PRIMARY KEY(CUSTOMER_ID);


ALTER TABLE CUSTOMER_GRADE ADD CONSTRAINT GRADE_PK PRIMARY KEY(GRADE_ID);


ALTER TABLE SUPPLIER ADD CONSTRAINT SUPPLIER_PK PRIMARY KEY(SUPPLIER_ID);


ALTER TABLE CONFIG_TYPE ADD CONSTRAINT CONFIG_TYPE_PK PRIMARY KEY(CONFIG_TYPE_ID);


ALTER TABLE CONFIG_CATEGORY ADD CONSTRAINT CATEGORY_PK PRIMARY KEY(CATEGORY_ID);


ALTER TABLE CONTACT ADD CONSTRAINT CONTACT_PK PRIMARY KEY(CONTACT_ID);


ALTER TABLE LEGAL_TENDER ADD CONSTRAINT LEGAL_TENDER_PK PRIMARY KEY(LEGT_ID);


ALTER TABLE PRICE_BAND ADD CONSTRAINT PRIB_PK PRIMARY KEY (PRIB_ID);


ALTER TABLE COMPANY ADD CONSTRAINT COMPANY_PK PRIMARY KEY(COMP_ID);


ALTER TABLE ORG_UNIT ADD CONSTRAINT ORG_UNIT_PK PRIMARY KEY(ORGU_ID);


ALTER TABLE PRGP_TYPE ADD CONSTRAINT PRGP_TYPE_PK PRIMARY KEY(PRGT_ID);


ALTER TABLE PRODGP_STRUCTURE ADD CONSTRAINT PRODGP_STRUCTURE_PK PRIMARY KEY(PSTR_ID);


ALTER TABLE PRODGP_STRUCTURE_DETAIL ADD CONSTRAINT PRODGP_STRUCTURE_DETAIL_PK PRIMARY KEY(PGSD_ID);


ALTER TABLE PRODUCT_GROUP ADD CONSTRAINT PRODUCT_GROUP_PK PRIMARY KEY(PRGP_ID);


ALTER TABLE ORG_TYPE ADD CONSTRAINT ORG_TYPE_PK PRIMARY KEY(ORGT_TYPE_ID);


ALTER TABLE PRODGP_STR_LINK ADD CONSTRAINT PRODGP_STR_LINK_PK PRIMARY KEY(PGSL_ID);


ALTER TABLE TAX_RULE_NAME ADD CONSTRAINT TXRN_PK PRIMARY KEY (TXRN_ID);


ALTER TABLE TAX_RULE ADD CONSTRAINT TXRL_PK PRIMARY KEY (TXRL_ID);


ALTER TABLE TAX_LEG_VARIANCE ADD CONSTRAINT TXLV_PK PRIMARY KEY (TXLV_ID);


ALTER TABLE UNIT_OF_MEASURE ADD CONSTRAINT UNOM_PK PRIMARY KEY (UNOM_ID);


ALTER TABLE PRODUCT ADD CONSTRAINT PROD_PK PRIMARY KEY (PROD_ID);


ALTER TABLE PROD_ORGU_LINK ADD CONSTRAINT PROU_PK PRIMARY KEY (PROU_ID);


ALTER TABLE PROD_PGRP_LINK
 ADD  CONSTRAINT PPGL_PK PRIMARY KEY(PPGL_ID);

ALTER TABLE SUPP_ORGU_LINK ADD CONSTRAINT SOL_PK PRIMARY KEY (SOL_ID);


ALTER TABLE SUPP_PROD_PRICE ADD CONSTRAINT SPRC_PK PRIMARY KEY (SPRC_ID);



ALTER TABLE PRODUCT_METRIC ADD CONSTRAINT PRDM_PK PRIMARY KEY (PRDM_ID);


ALTER TABLE PRICE_CODE ADD CONSTRAINT PRCC_PK PRIMARY KEY (PRCC_ID);


ALTER TABLE PRICE ADD CONSTRAINT PRCE_PK PRIMARY KEY (PRCE_ID);


ALTER TABLE PROD_TYPE ADD CONSTRAINT PRLT_PK PRIMARY KEY (PRTY_ID);


ALTER TABLE PROU_TXRL_LINK
 ADD  CONSTRAINT POTL_PK PRIMARY KEY(PROU_ID,TXRL_ID);



ALTER TABLE PROJECT
 ADD  CONSTRAINT PROJECT_PK PRIMARY KEY(PROJECT_ID);


ALTER TABLE BILL_OF_QUANTITY
 ADD  CONSTRAINT BILL_OF_QUANTITY_PK PRIMARY KEY(BOQ_ID);


ALTER TABLE BOQ_DETAIL
 ADD  CONSTRAINT BOQ_DETAIL_PK PRIMARY KEY(BOQ_DETAIL_ID);


ALTER TABLE STORE
 ADD  CONSTRAINT STORE_PK PRIMARY KEY(STORE_ID);


ALTER TABLE TXN_HEADER
 ADD  CONSTRAINT TXN_HEADER_PK PRIMARY KEY(TXHD_ID);


ALTER TABLE TXN_DETAIL
 ADD  CONSTRAINT TXN_DETAIL_PK PRIMARY KEY(TXDE_ID);



ALTER TABLE MEDIA_TYPE
 ADD  CONSTRAINT MEDIA_TYPE_PK PRIMARY KEY(MEDT_ID);


ALTER TABLE PAYMENT_MEDIA
 ADD  CONSTRAINT PAYMENT_MEDIA_PK PRIMARY KEY(PAYM_ID);


ALTER TABLE TXN_MEDIA
 ADD  CONSTRAINT TXN_MEDIA_PK PRIMARY KEY(TXMD_ID);


ALTER TABLE PURCHASE_ORDER_HEADER
 ADD  CONSTRAINT POH_PK PRIMARY KEY(POH_ID);


ALTER TABLE PURCHASE_LINE
 ADD  CONSTRAINT PL_PK PRIMARY KEY(POL_ID);


ALTER TABLE PO_BOQ_LINK
 ADD  CONSTRAINT POBOQL_PK PRIMARY KEY(PBQL_ID);



ALTER TABLE DELIVERY_NOTE_HEADER
 ADD  CONSTRAINT DELIVERY_NOTE_HEADER_PK PRIMARY KEY(DELN_ID);


ALTER TABLE DELIVERY_NOTE_LINE
 ADD  CONSTRAINT DELIVERY_NOTE_LINE_PK PRIMARY KEY(DLNL_ID);


ALTER TABLE PO_DEL_NOTE_LINK
 ADD  CONSTRAINT PO_DEL_NOTE_LINK_PK PRIMARY KEY(PODLVL_ID);



ALTER TABLE CUSTOMER_CONTACT
 ADD  CONSTRAINT CUSTOMER_CONTACT_PK PRIMARY KEY(CUST_CONTACT_ID);


ALTER TABLE APP_USER
 ADD  CONSTRAINT APP_USER_PK PRIMARY KEY(USR_ID);


ALTER TABLE APP_ROLE
 ADD  CONSTRAINT APP_ROLE_PK PRIMARY KEY(ROLE_ID);


ALTER TABLE APP_USER_ROLE
 ADD  CONSTRAINT APP_USER_ROLE_PK PRIMARY KEY(OP_ROLE_ID);



ALTER TABLE ACCESS_POINT
 ADD  CONSTRAINT ACCESS_POINT_PK PRIMARY KEY(ACPT_ID);


ALTER TABLE USER_ACCESS
 ADD  CONSTRAINT USER_ACCESS_PK PRIMARY KEY(USR_ACS_ID);


ALTER TABLE ROLE_ACCESS
 ADD  CONSTRAINT ROLE_ACCESS_PK PRIMARY KEY(ROLE_ACS_ID);


ALTER TABLE STOCK_LOCATION
 ADD  CONSTRAINT STOCK_LOCATION_PK PRIMARY KEY(STCK_LOCN_ID);


ALTER TABLE STOCK
 ADD  CONSTRAINT STOCK_PK PRIMARY KEY(STCK_ID);


ALTER TABLE STOCK_EVENT
 ADD  CONSTRAINT STOCK_EVENT_PK PRIMARY KEY(STCK_EVNT_ID);


ALTER TABLE INVOICE
 ADD  CONSTRAINT INVOICE_PK PRIMARY KEY(TXIV_ID);


ALTER TABLE INVOICE_DETAIL
 ADD  CONSTRAINT INVOICE_DETAIL_PK PRIMARY KEY(TXID_ID);


ALTER TABLE INVOICE_MEDIA
 ADD  CONSTRAINT INVOICE_MEDIA_PK PRIMARY KEY(TXIM_ID);


ALTER TABLE CUSTOMER_ACCOUNT_DEBT
 ADD  CONSTRAINT CUSTOMER_ACCOUNT_DEBT_PK PRIMARY KEY(CAD_ID);


ALTER TABLE TXN_ACC_PAYMENT
 ADD  CONSTRAINT TXN_ACC_PAYMENT_PK PRIMARY KEY(TAP_ID);


ALTER TABLE CASH_SESSION
 ADD  CONSTRAINT CASH_SESSION_PK PRIMARY KEY(CSSN_SESSION_ID);


ALTER TABLE SESSION_EVENT
 ADD  CONSTRAINT SESSION_EVENT_PK PRIMARY KEY(SEEV_ID);


ALTER TABLE SESSION_MEDIA
 ADD  CONSTRAINT SESSION_MEDIA_PK PRIMARY KEY(SEME_ID);


ALTER TABLE SESSION_EVENT_DETAIL
 ADD  CONSTRAINT SESSION_EVENT_DETAIL_PK PRIMARY KEY(SEDE_ID);


ALTER TABLE SESSION_TOTAL
 ADD  CONSTRAINT SESSION_TOTAL_PK PRIMARY KEY(SETL_ID);


ALTER TABLE TXN_SESSION_LINK
 ADD  CONSTRAINT TXN_SESSION_LINK_PK PRIMARY KEY(TSL_ID);


ALTER TABLE TOTAL_SALE_OPERATOR
 ADD  CONSTRAINT TOTAL_SALE_OPERATOR_PK PRIMARY KEY(TOOP_ID);


ALTER TABLE TOTAL_MEDIA_OPERATOR
 ADD  CONSTRAINT TOTAL_MEDIA_OPERATOR_PK PRIMARY KEY(TOMO_ID);


ALTER TABLE ACCOUNT
 ADD  CONSTRAINT ACCOUNT_PK PRIMARY KEY(ACC_ID);



ALTER TABLE JOURNAL_ENTRY
 ADD  CONSTRAINT JOURNAL_ENTRY_PK PRIMARY KEY(JRN_ID);


ALTER TABLE JOURNAL_RULE
 ADD  CONSTRAINT JOURNAL_RULE_PK PRIMARY KEY(JRNR_ID);


ALTER TABLE ACCOUNTING_EXPORT
 ADD  CONSTRAINT ACCOUNTING_EXPORT_PK PRIMARY KEY(ACC_EXP_ID);


ALTER TABLE PO_SO_LINK
 ADD  CONSTRAINT PO_SO_LINK_PK PRIMARY KEY(POSO_ID);



ALTER TABLE CUSTOMER ADD CONSTRAINT CUSTOMER_2GRADE_FK FOREIGN KEY (GRADE_ID) REFERENCES CUSTOMER_GRADE(GRADE_ID);


ALTER TABLE CUSTOMER ADD CONSTRAINT CUSTOMER_FK2 FOREIGN KEY (Customer_Type) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);


ALTER TABLE CUSTOMER ADD CONSTRAINT CUSTOMER_FK3 FOREIGN KEY (CUSTOMER_STATUS) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);


ALTER TABLE CUSTOMER ADD CONSTRAINT CUSTOMER_CONTACT_ID_2CONTACT_FK FOREIGN KEY (CONTACT_ID) REFERENCES CONTACT(CONTACT_ID);

ALTER TABLE COMPANY ADD CONSTRAINT COMPANY_CONTACT_ID_2CONTACT_FK FOREIGN KEY (CONTACT_ID) REFERENCES CONTACT(CONTACT_ID);

ALTER TABLE COMPANY ADD CONSTRAINT COMPANY_TYPE_ID_2CONFIG_CAT_FK FOREIGN KEY (COMPANY_TYPE_ID) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);

ALTER TABLE CONFIG_CATEGORY ADD CONSTRAINT CATEGORY_2TYPE_FK FOREIGN KEY (CONFIG_TYPE_ID) REFERENCES CONFIG_TYPE(CONFIG_TYPE_ID);




ALTER TABLE SUPPLIER ADD CONSTRAINT SUPPLIER_TYEP_ID_2CATEGORY_FK FOREIGN KEY (SUPPLIER_TYPE_ID) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);


ALTER TABLE SUPPLIER ADD CONSTRAINT SUPPLIER_STATUS_ID_2CATEGORY_FK FOREIGN KEY (SUPPLIER_STATUS_ID) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);


ALTER TABLE SUPPLIER ADD CONSTRAINT SUPPLIER_CONTACT_ID_2CONTACT_FK FOREIGN KEY (CONTACT_ID) REFERENCES CONTACT(CONTACT_ID);



ALTER TABLE LEGAL_TENDER ADD CONSTRAINT LEGT_UK1 UNIQUE(LEGT_CODE);



ALTER TABLE PRICE_BAND ADD CONSTRAINT PRIB_UK1 UNIQUE(PRIB_CODE);


ALTER TABLE PRICE_BAND ADD CONSTRAINT PRIB_FK1 FOREIGN KEY (ORGU_ID) REFERENCES ORG_UNIT(ORGU_ID);


ALTER TABLE PRICE_BAND ADD CONSTRAINT PRIB_FK3 FOREIGN KEY (LEGT_ID) REFERENCES LEGAL_TENDER(LEGT_ID);



ALTER TABLE ORG_TYPE ADD CONSTRAINT ORGT_UK1 UNIQUE(ORGT_TYPE_NAME);




ALTER TABLE PRODUCT_GROUP ADD CONSTRAINT PRODUCT_GROUP_ORGU_ID_2ORG_UNIT_FK FOREIGN KEY (ORGU_ID) REFERENCES ORG_UNIT(ORGU_ID);


ALTER TABLE PRODUCT_GROUP ADD CONSTRAINT PRODUCT_GROUP_PRGT_ID_2PRGP_TYPE_FK FOREIGN KEY (PRGT_ID) REFERENCES PRGP_TYPE(PRGT_ID);


ALTER TABLE PRODUCT_GROUP ADD CONSTRAINT PRGP_FK4 FOREIGN KEY (PRGP_MAIN_PRGP_ID) REFERENCES PRODUCT_GROUP(PRGP_ID);


ALTER TABLE PRODUCT_GROUP ADD CONSTRAINT PRGP_UK1 UNIQUE(PRGP_CODE,
   ORGU_ID,
   PRGT_ID);



ALTER TABLE ORG_UNIT ADD CONSTRAINT ORG_UNIT_COMP_ID_2COMPANY_FK FOREIGN KEY (COMP_ID) REFERENCES COMPANY(COMP_ID);


ALTER TABLE ORG_UNIT ADD CONSTRAINT ORG_UNIT_ORGT_TYPE_ID_2ORG_TYPE_FK FOREIGN KEY (ORGT_TYPE_ID) REFERENCES ORG_TYPE(ORGT_TYPE_ID);


ALTER TABLE ORG_UNIT ADD CONSTRAINT ORGU_FK8 FOREIGN KEY (PRIB_ID_COST) REFERENCES PRICE_BAND(PRIB_ID);


ALTER TABLE ORG_UNIT ADD CONSTRAINT ORGU_FK5 FOREIGN KEY (PRIB_ID) REFERENCES PRICE_BAND(PRIB_ID);


ALTER TABLE ORG_UNIT ADD CONSTRAINT ORGU_FK2 FOREIGN KEY (ORGU_DEF_LEGT_ID) REFERENCES LEGAL_TENDER(LEGT_ID);


ALTER TABLE PRODGP_STRUCTURE ADD CONSTRAINT PRODGP_STRUCTURE_ORGU_ID_2ORG_UNIT_FK FOREIGN KEY (ORGU_ID) REFERENCES ORG_UNIT(ORGU_ID);


ALTER TABLE PRODGP_STRUCTURE_DETAIL ADD CONSTRAINT PRODGP_STRUCTURE_DETAIL_PSTR_ID_2PRODGP_STRUCTURE_FK FOREIGN KEY (PSTR_ID) REFERENCES PRODGP_STRUCTURE(PSTR_ID);


ALTER TABLE PRODGP_STRUCTURE_DETAIL ADD CONSTRAINT PRODGP_STRUCTURE_DETAIL_PRGT_ID_2PRGP_TYPE_FK FOREIGN KEY (PRGT_ID) REFERENCES PRGP_TYPE(PRGT_ID);


ALTER TABLE PRODGP_STR_LINK ADD CONSTRAINT PRODGP_STR_LINK_PRGP_ID_2PRODUCT_GROUP_FK FOREIGN KEY (PRGP_ID) REFERENCES PRODUCT_GROUP(PRGP_ID);


ALTER TABLE PRODGP_STR_LINK ADD CONSTRAINT PRODGP_STR_LINK_PSTR_ID_2PRODGP_STRUCTURE_FK FOREIGN KEY (PSTR_ID) REFERENCES PRODGP_STRUCTURE(PSTR_ID);


ALTER TABLE PRODGP_STR_LINK ADD CONSTRAINT PRODGP_STR_LINK_PRGP_PARENT_ID_2PRODUCT_GROUP_FK FOREIGN KEY (PRGP_PARENT_ID) REFERENCES PRODUCT_GROUP(PRGP_ID);


ALTER TABLE PRODGP_STR_LINK ADD CONSTRAINT PRODGP_STR_LINK_PRGP_CHILD_ID_2PRODUCT_GROUP_FK FOREIGN KEY (PRGP_CHILD_ID) REFERENCES PRODUCT_GROUP(PRGP_ID);


ALTER TABLE PRODGP_STR_LINK ADD CONSTRAINT PRODGP_STR_LINK_PGSD_ID_2PRODGP_STRUCTURE_DETAIL_FK FOREIGN KEY (PGSD_ID) REFERENCES PRODGP_STRUCTURE_DETAIL(PGSD_ID);


ALTER TABLE TAX_RULE_NAME ADD CONSTRAINT TXRN_UK1 UNIQUE(TXRN_NAME);


ALTER TABLE TAX_RULE ADD CONSTRAINT TXRL_FK1 FOREIGN KEY (TXRN_ID) REFERENCES TAX_RULE_NAME(TXRN_ID);


ALTER TABLE TAX_LEG_VARIANCE ADD CONSTRAINT TXLV_FK1 FOREIGN KEY (TXRL_ID) REFERENCES TAX_RULE(TXRL_ID);


ALTER TABLE UNIT_OF_MEASURE ADD CONSTRAINT UNOM_UK1 UNIQUE(UNOM_CODE);


ALTER TABLE UNIT_OF_MEASURE ADD CONSTRAINT UNOM_FK1 FOREIGN KEY (UNOM_ID_PARENT) REFERENCES UNIT_OF_MEASURE(UNOM_ID);



#ALTER TABLE PRODUCT ADD CONSTRAINT PROD_UK1 UNIQUE(PROD_SKU,
#   ORGU_ID_OWNING)
#

ALTER TABLE PRODUCT ADD CONSTRAINT PROD_FK6 FOREIGN KEY (ORGU_ID_OWNING) REFERENCES ORG_UNIT(ORGU_ID);


ALTER TABLE PRODUCT ADD CONSTRAINT PRODUCT_FK1 FOREIGN KEY (CAT_ID_TYPE) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);




ALTER TABLE PROD_ORGU_LINK ADD CONSTRAINT PROU_FK3 FOREIGN KEY (CAT_ID_STATUS) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);


ALTER TABLE PROD_ORGU_LINK ADD CONSTRAINT PROU_FK1 FOREIGN KEY (PROD_ID) REFERENCES PRODUCT(PROD_ID);


ALTER TABLE PROD_ORGU_LINK ADD CONSTRAINT PROU_FK2 FOREIGN KEY (ORGU_ID) REFERENCES ORG_UNIT(ORGU_ID);


ALTER TABLE PROD_PGRP_LINK
 ADD  CONSTRAINT PPGL_FK2 FOREIGN KEY(PRGP_ID) REFERENCES PRODUCT_GROUP(PRGP_ID);

ALTER TABLE PROD_PGRP_LINK
 ADD  CONSTRAINT PPGL_FK1 FOREIGN KEY(PROD_ID) REFERENCES PRODUCT(PROD_ID);

ALTER TABLE SUPP_ORGU_LINK ADD CONSTRAINT SOL_UK1 UNIQUE(SUPP_ID,
   ORGU_ID);


ALTER TABLE SUPP_ORGU_LINK ADD CONSTRAINT SOL_FK1 FOREIGN KEY (SUPP_ID) REFERENCES SUPPLIER(SUPPLIER_ID);


ALTER TABLE SUPP_ORGU_LINK ADD CONSTRAINT SOL_FK2 FOREIGN KEY (ORGU_ID) REFERENCES ORG_UNIT(ORGU_ID);


ALTER TABLE SUPP_ORGU_LINK ADD CONSTRAINT SOL_FK3 FOREIGN KEY (CAT_ID_STATUS) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);



ALTER TABLE SUPP_PROD_PRICE ADD CONSTRAINT SPRC_UK1 UNIQUE(SOL_ID,
   PROD_ID,
   UNOM_ID,
   UNOM_QTY);


ALTER TABLE SUPP_PROD_PRICE ADD CONSTRAINT SPRC_FK5 FOREIGN KEY (LEGT_ID) REFERENCES LEGAL_TENDER(LEGT_ID);


ALTER TABLE SUPP_PROD_PRICE ADD CONSTRAINT SPRC_FK2 FOREIGN KEY (SOL_ID) REFERENCES SUPP_ORGU_LINK(SOL_ID);


ALTER TABLE SUPP_PROD_PRICE ADD CONSTRAINT SPRC_FK3 FOREIGN KEY (UNOM_ID) REFERENCES UNIT_OF_MEASURE(UNOM_ID);


ALTER TABLE SUPP_PROD_PRICE ADD CONSTRAINT SPRC_FK1 FOREIGN KEY (PROD_ID) REFERENCES PRODUCT(PROD_ID);


ALTER TABLE SUPP_PROD_PRICE ADD CONSTRAINT SPRC_FK4 FOREIGN KEY (UNOM_ID_CONTENT) REFERENCES UNIT_OF_MEASURE(UNOM_ID);


ALTER TABLE SUPP_PROD_PRICE ADD CONSTRAINT SPRC_FK6 FOREIGN KEY (TXLV_ID) REFERENCES TAX_LEG_VARIANCE(TXLV_ID);


ALTER TABLE PRODUCT_METRIC ADD CONSTRAINT PRDM_FK2 FOREIGN KEY (PROD_ID) REFERENCES PRODUCT(PROD_ID);


ALTER TABLE PRICE_CODE ADD CONSTRAINT PRCC_UK1 UNIQUE(PRCC_CODE);


ALTER TABLE PRICE ADD CONSTRAINT PRCE_FK2 FOREIGN KEY (PRCC_ID) REFERENCES PRICE_CODE(PRCC_ID);


ALTER TABLE PRICE ADD CONSTRAINT PRCE_FK3 FOREIGN KEY (PROD_ID) REFERENCES PRODUCT(PROD_ID);


ALTER TABLE PRICE ADD CONSTRAINT PRCE_FK1 FOREIGN KEY (PRIB_ID) REFERENCES PRICE_BAND(PRIB_ID);


ALTER TABLE PRICE ADD CONSTRAINT PRCE_FK4 FOREIGN KEY (UNOM_ID) REFERENCES unit_of_measure(UNOM_ID);


ALTER TABLE PROD_TO_PROD_LINK ADD CONSTRAINT PTPL_PK PRIMARY KEY (PROD_ID_FROM,
  PRTY_ID,
  PROD_ID_TO);



ALTER TABLE DEPARTMENT ADD CONSTRAINT DEPT_PK PRIMARY KEY (DEPT_ID);


ALTER TABLE CATEGORY_HEADING ADD CONSTRAINT CATH_PK PRIMARY KEY (CATH_ID);


ALTER TABLE CATEGORY_VALUE ADD CONSTRAINT CATV_PK PRIMARY KEY (CATV_ID);


ALTER TABLE DEPT_CATEGORY ADD CONSTRAINT DEPT_CAT_PK PRIMARY KEY (DEPT_CAT_ID);


ALTER TABLE PROD_DEPT_CAT ADD CONSTRAINT PROD_DEPT_CAT_PK PRIMARY KEY (ID);


ALTER TABLE DEPT_CATEGORY_VALUE ADD CONSTRAINT DEPT_CATEGORY_VALUE_PK PRIMARY KEY (DEPT_CAT_VAL_ID);


ALTER TABLE PROD_TO_PROD_LINK ADD CONSTRAINT PTPL_FK4 FOREIGN KEY (UNOM_ID) REFERENCES UNIT_OF_MEASURE(UNOM_ID);


ALTER TABLE PROD_TO_PROD_LINK ADD CONSTRAINT PTPL_FK1 FOREIGN KEY (PROD_ID_TO) REFERENCES PRODUCT(PROD_ID);


ALTER TABLE PROD_TO_PROD_LINK ADD CONSTRAINT PTPL_FK2 FOREIGN KEY (PROD_ID_FROM) REFERENCES PRODUCT(PROD_ID);


ALTER TABLE PROD_TO_PROD_LINK ADD CONSTRAINT PTPL_FK3 FOREIGN KEY (PRTY_ID) REFERENCES PROD_TYPE(PRTY_ID);


ALTER TABLE PROU_TXRL_LINK
 ADD  CONSTRAINT POTL_FK1 FOREIGN KEY(PROU_ID) REFERENCES PROD_ORGU_LINK(PROU_ID);


ALTER TABLE PROU_TXRL_LINK
 ADD  CONSTRAINT POTL_FK2 FOREIGN KEY(TXRL_ID) REFERENCES TAX_RULE(TXRL_ID);


ALTER TABLE BILL_OF_QUANTITY
 ADD  CONSTRAINT BILL_OF_QUANTITY_FK1 FOREIGN KEY(PROJECT_ID) REFERENCES PROJECT(PROJECT_ID);


ALTER TABLE BILL_OF_QUANTITY
 ADD  CONSTRAINT BILL_OF_QUANTITY_FK2 FOREIGN KEY(BOQ_STATUS) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);


ALTER TABLE BILL_OF_QUANTITY
 ADD  CONSTRAINT BILL_OF_QUANTITY_FK3 FOREIGN KEY(ORGU_ID) REFERENCES ORG_UNIT(ORGU_ID);


ALTER TABLE PROJECT
 ADD  CONSTRAINT PROJECT_FK1 FOREIGN KEY(CLIENT_ID) REFERENCES CUSTOMER(CUSTOMER_ID);


ALTER TABLE BOQ_DETAIL
 ADD  CONSTRAINT BOQ_DETAIL_FK1 FOREIGN KEY(BOQ_ID) REFERENCES BILL_OF_QUANTITY(BOQ_ID);


ALTER TABLE BOQ_DETAIL
 ADD  CONSTRAINT BOQ_DETAIL_FK2 FOREIGN KEY(UNOM_ID) REFERENCES UNIT_OF_MEASURE(UNOM_ID);


ALTER TABLE BOQ_DETAIL
 ADD  CONSTRAINT BOQ_DETAIL_FK3 FOREIGN KEY(PROD_ID) REFERENCES PRODUCT(PROD_ID);


ALTER TABLE BOQ_DETAIL
 ADD  CONSTRAINT BOQ_DETAIL_FK4 FOREIGN KEY(BQD_STATUS) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);


ALTER TABLE BOQ_DETAIL
 ADD  CONSTRAINT BOQ_DETAIL_FK5 FOREIGN KEY(SUPPLIER_ID) REFERENCES SUPPLIER(SUPPLIER_ID);


ALTER TABLE BOQ_DETAIL
 ADD  CONSTRAINT BOQ_DETAIL_FK6 FOREIGN KEY(BQD_CREATION_TYPE) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);



ALTER TABLE STORE
 ADD  CONSTRAINT STORE_FK1 FOREIGN KEY(ORGU_ID) REFERENCES ORG_UNIT(ORGU_ID);



ALTER TABLE TXN_HEADER
 ADD  CONSTRAINT TXN_HEADER_FK1 FOREIGN KEY(ORGU_ID) REFERENCES ORG_UNIT(ORGU_ID);


ALTER TABLE TXN_HEADER
 ADD  CONSTRAINT TXN_HEADER_FK2 FOREIGN KEY(STORE_ID) REFERENCES STORE(STORE_ID);


ALTER TABLE TXN_HEADER ADD CONSTRAINT TXN_HEADER_FK3 FOREIGN KEY (TXHD_STATE) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);


ALTER TABLE TXN_HEADER ADD CONSTRAINT TXN_HEADER_FK4 FOREIGN KEY (TXHD_TXN_TYPE) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);


#ALTER TABLE TXN_HEADER ADD CONSTRAINT TXN_HEADER_FK5 FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID);
#

ALTER TABLE TXN_DETAIL ADD CONSTRAINT TXN_DETAIL_FK1 FOREIGN KEY (ORGU_ID) REFERENCES ORG_UNIT(ORGU_ID);


ALTER TABLE TXN_DETAIL ADD CONSTRAINT TXN_DETAIL_FK2 FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID);


ALTER TABLE TXN_DETAIL ADD CONSTRAINT TXN_DETAIL_FK3 FOREIGN KEY (TXHD_ID) REFERENCES TXN_HEADER(TXHD_ID);


ALTER TABLE TXN_DETAIL ADD CONSTRAINT TXN_DETAIL_FK4 FOREIGN KEY (TXDE_PROD_ID) REFERENCES PRODUCT(PROD_ID);


ALTER TABLE TXN_DETAIL ADD CONSTRAINT TXN_DETAIL_FK5 FOREIGN KEY (TXDE_UNOM_ID) REFERENCES UNIT_OF_MEASURE(UNOM_ID);


ALTER TABLE TXN_DETAIL ADD CONSTRAINT TXN_DETAIL_FK6 FOREIGN KEY (TXDE_DETAIL_TYPE) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);




ALTER TABLE PAYMENT_MEDIA ADD CONSTRAINT PAYMENT_MEDIA_FK1 FOREIGN KEY (MEDT_ID) REFERENCES MEDIA_TYPE(MEDT_ID);


ALTER TABLE PAYMENT_MEDIA ADD CONSTRAINT PAYMENT_MEDIA_FK2 FOREIGN KEY (LEGT_ID) REFERENCES LEGAL_TENDER(LEGT_ID);



ALTER TABLE TXN_MEDIA ADD CONSTRAINT TXN_MEDIA_FK1 FOREIGN KEY (ORGU_ID) REFERENCES ORG_UNIT(ORGU_ID);


ALTER TABLE TXN_MEDIA ADD CONSTRAINT TXN_MEDIA_FK2 FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID);


ALTER TABLE TXN_MEDIA ADD CONSTRAINT TXN_MEDIA_FK3 FOREIGN KEY (TXHD_ID) REFERENCES TXN_HEADER(TXHD_ID);


ALTER TABLE TXN_MEDIA ADD CONSTRAINT TXN_MEDIA_FK4 FOREIGN KEY (MEDT_ID) REFERENCES MEDIA_TYPE(MEDT_ID);


ALTER TABLE TXN_MEDIA ADD CONSTRAINT TXN_MEDIA_FK5 FOREIGN KEY (PAYM_ID) REFERENCES PAYMENT_MEDIA(PAYM_ID);


ALTER TABLE TXN_MEDIA ADD CONSTRAINT TXN_MEDIA_FK6 FOREIGN KEY (TXMD_TYPE) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);


ALTER TABLE PURCHASE_ORDER_HEADER ADD CONSTRAINT POH_FK1 FOREIGN KEY (ORGU_ID) REFERENCES ORG_UNIT(ORGU_ID);


ALTER TABLE PURCHASE_ORDER_HEADER ADD CONSTRAINT POH_FK2 FOREIGN KEY (POH_TYPE) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);


ALTER TABLE PURCHASE_ORDER_HEADER ADD CONSTRAINT POH_FK3 FOREIGN KEY (POH_CREATION_TYPE) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);


ALTER TABLE PURCHASE_ORDER_HEADER ADD CONSTRAINT POH_FK4 FOREIGN KEY (POH_STATUS) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);


ALTER TABLE PURCHASE_ORDER_HEADER ADD CONSTRAINT POH_FK5 FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIER(SUPPLIER_ID);


ALTER TABLE PURCHASE_LINE ADD CONSTRAINT PL_FK1 FOREIGN KEY (POH_ID) REFERENCES PURCHASE_ORDER_HEADER(POH_ID);


ALTER TABLE PURCHASE_LINE ADD CONSTRAINT PL_FK2 FOREIGN KEY (SPRC_ID) REFERENCES SUPP_PROD_PRICE(SPRC_ID);


ALTER TABLE PURCHASE_LINE ADD CONSTRAINT PL_FK3 FOREIGN KEY (TXLV_ID) REFERENCES TAX_LEG_VARIANCE(TXLV_ID);


ALTER TABLE PURCHASE_LINE ADD CONSTRAINT PL_FK4 FOREIGN KEY (UNOM_ID) REFERENCES UNIT_OF_MEASURE(UNOM_ID);


ALTER TABLE PURCHASE_LINE ADD CONSTRAINT PL_FK5 FOREIGN KEY (UNOM_ID_CONTENTS) REFERENCES UNIT_OF_MEASURE(UNOM_ID);


ALTER TABLE PURCHASE_LINE ADD CONSTRAINT PL_FK6 FOREIGN KEY (POL_STATUS) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);


ALTER TABLE PURCHASE_LINE ADD CONSTRAINT PL_FK7 FOREIGN KEY (POL_CREATION_TYPE) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);


ALTER TABLE PO_BOQ_LINK ADD CONSTRAINT PO_BOQ_LINK_FK1 FOREIGN KEY (POH_ID) REFERENCES PURCHASE_ORDER_HEADER(POH_ID);


ALTER TABLE PO_BOQ_LINK ADD CONSTRAINT PO_BOQ_LINK_FK2 FOREIGN KEY (POL_ID) REFERENCES PURCHASE_LINE(POL_ID);


ALTER TABLE PO_BOQ_LINK ADD CONSTRAINT PO_BOQ_LINK_FK3 FOREIGN KEY (BOQ_ID) REFERENCES BILL_OF_QUANTITY(BOQ_ID);


ALTER TABLE PO_BOQ_LINK ADD CONSTRAINT PO_BOQ_LINK_FK4 FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT(PROJECT_ID);


ALTER TABLE PO_BOQ_LINK ADD CONSTRAINT PO_BOQ_LINK_FK5 FOREIGN KEY (BPQL_STATUS) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);


ALTER TABLE PO_BOQ_LINK ADD CONSTRAINT PO_BOQ_LINK_FK6 FOREIGN KEY (BOQ_DETAIL_ID) REFERENCES BOQ_DETAIL(BOQ_DETAIL_ID);


ALTER TABLE DELIVERY_NOTE_HEADER ADD CONSTRAINT DELIVERY_NOTE_HEADER_FK1 FOREIGN KEY (ORGU_ID) REFERENCES ORG_UNIT(ORGU_ID);


ALTER TABLE DELIVERY_NOTE_HEADER ADD CONSTRAINT DELIVERY_NOTE_HEADER_FK2 FOREIGN KEY (POH_ID) REFERENCES PURCHASE_ORDER_HEADER(POH_ID);


ALTER TABLE DELIVERY_NOTE_HEADER ADD CONSTRAINT DELIVERY_NOTE_HEADER_FK3 FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIER(SUPPLIER_ID);


ALTER TABLE DELIVERY_NOTE_HEADER ADD CONSTRAINT DELIVERY_NOTE_HEADER_FK4 FOREIGN KEY (DELN_TYPE) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);


ALTER TABLE DELIVERY_NOTE_HEADER ADD CONSTRAINT DELIVERY_NOTE_HEADER_FK5 FOREIGN KEY (DELN_STATUS) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);


ALTER TABLE DELIVERY_NOTE_LINE ADD CONSTRAINT DELIVERY_NOTE_LINE_FK1 FOREIGN KEY (DELN_ID) REFERENCES DELIVERY_NOTE_HEADER(DELN_ID);


ALTER TABLE DELIVERY_NOTE_LINE ADD CONSTRAINT DELIVERY_NOTE_LINE_FK3 FOREIGN KEY (SPRC_ID) REFERENCES SUPP_PROD_PRICE(SPRC_ID);


ALTER TABLE DELIVERY_NOTE_LINE ADD CONSTRAINT DELIVERY_NOTE_LINE_FK4 FOREIGN KEY (DLNL_CASE_SIZE) REFERENCES UNIT_OF_MEASURE(UNOM_ID);


ALTER TABLE DELIVERY_NOTE_LINE ADD CONSTRAINT DELIVERY_NOTE_LINE_FK5 FOREIGN KEY (DLNL_PRODUCT_SIZE) REFERENCES UNIT_OF_MEASURE(UNOM_ID);


ALTER TABLE DELIVERY_NOTE_LINE ADD CONSTRAINT DELIVERY_NOTE_LINE_FK6 FOREIGN KEY (RCVD_CASE_SIZE) REFERENCES UNIT_OF_MEASURE(UNOM_ID);


ALTER TABLE DELIVERY_NOTE_LINE ADD CONSTRAINT DELIVERY_NOTE_LINE_FK7 FOREIGN KEY (RCVD_PRODUCT_SIZE) REFERENCES UNIT_OF_MEASURE(UNOM_ID);


ALTER TABLE DELIVERY_NOTE_LINE ADD CONSTRAINT DELIVERY_NOTE_LINE_FK8 FOREIGN KEY (DLNL_STATUS) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);


ALTER TABLE DELIVERY_NOTE_LINE ADD CONSTRAINT DELIVERY_NOTE_LINE_FK9 FOREIGN KEY (TXLV_ID) REFERENCES TAX_LEG_VARIANCE(TXLV_ID);


ALTER TABLE PO_DEL_NOTE_LINK ADD CONSTRAINT PO_DEL_NOTE_LINK_FK1 FOREIGN KEY (POH_ID) REFERENCES PURCHASE_ORDER_HEADER(POH_ID);


ALTER TABLE PO_DEL_NOTE_LINK ADD CONSTRAINT PO_DEL_NOTE_LINK_FK2 FOREIGN KEY (DELN_ID) REFERENCES DELIVERY_NOTE_HEADER(DELN_ID);



ALTER TABLE CUSTOMER_CONTACT ADD CONSTRAINT CUSTOMER_CONTACT_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID);


ALTER TABLE CUSTOMER_CONTACT ADD CONSTRAINT CUSTOMER_CONTACT_FK2 FOREIGN KEY (CONTACT_ID) REFERENCES CONTACT(CONTACT_ID);


ALTER TABLE COMPANY_CONTACT ADD CONSTRAINT COMPANY_CONTACT_FK1 FOREIGN KEY (COMP_ID) REFERENCES COMPANY(COMP_ID);

ALTER TABLE COMPANY_CONTACT ADD CONSTRAINT COMPANY_CONTACT_FK2 FOREIGN KEY (CONTACT_ID) REFERENCES CONTACT(CONTACT_ID);

ALTER TABLE CONTACT ADD CONSTRAINT CONTACT_FK1 FOREIGN KEY (CONTACT_TYPE) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);



ALTER TABLE APP_USER_ROLE ADD CONSTRAINT APP_USER_ROLE_FK1 FOREIGN KEY (USR_ID) REFERENCES APP_USER(USR_ID);


ALTER TABLE APP_USER_ROLE ADD CONSTRAINT APP_USER_ROLE_FK2 FOREIGN KEY (ROLE_ID) REFERENCES APP_ROLE(ROLE_ID);



ALTER TABLE USER_ACCESS ADD CONSTRAINT USER_ACCESS_FK1 FOREIGN KEY (USR_ID) REFERENCES APP_USER(USR_ID);


ALTER TABLE USER_ACCESS ADD CONSTRAINT USER_ACCESS_FK2 FOREIGN KEY (ACPT_ID) REFERENCES ACCESS_POINT(ACPT_ID);



ALTER TABLE ROLE_ACCESS ADD CONSTRAINT ROLE_ACCESS_FK1 FOREIGN KEY (ROLE_ID) REFERENCES APP_ROLE(ROLE_ID);



ALTER TABLE ROLE_ACCESS ADD CONSTRAINT ROLE_ACCESS_FK2 FOREIGN KEY (ACPT_ID) REFERENCES ACCESS_POINT(ACPT_ID);


ALTER TABLE STOCK_LOCATION ADD CONSTRAINT STOCK_LOCATION_FK1 FOREIGN KEY (ORGU_ID) REFERENCES ORG_UNIT(ORGU_ID);


ALTER TABLE STOCK_LOCATION ADD CONSTRAINT STOCK_LOCATION_FK2 FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID);


ALTER TABLE STOCK ADD CONSTRAINT STOCK_FK2 FOREIGN KEY (PROD_ID) REFERENCES PRODUCT(PROD_ID);


ALTER TABLE STOCK ADD CONSTRAINT STOCK_FK4 FOREIGN KEY (ORGU_ID_LOCATION) REFERENCES ORG_UNIT(ORGU_ID);


#ALTER TABLE STOCK ADD CONSTRAINT STOCK_FK5 FOREIGN KEY (UNOM_ID) REFERENCES UNIT_OF_MEASURE(UNOM_ID);
#

ALTER TABLE STOCK ADD CONSTRAINT STOCK_FK6 FOREIGN KEY (STCK_COND) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);


ALTER TABLE STOCK ADD CONSTRAINT STOCK_FK7 FOREIGN KEY (STCK_CAT) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);


ALTER TABLE STOCK ADD CONSTRAINT STOCK_FK8 FOREIGN KEY (STCK_LOCN_ID) REFERENCES STOCK_LOCATION(STCK_LOCN_ID);


ALTER TABLE STOCK ADD CONSTRAINT STOCK_FK9 FOREIGN KEY (ORGU_ID_RESPBILITY) REFERENCES ORG_UNIT(ORGU_ID);


#ALTER TABLE STOCK_EVENT ADD CONSTRAINT STOCK_EVENT_FK1 FOREIGN KEY (STCK_ID) REFERENCES STOCK(STCK_ID);
#

ALTER TABLE STOCK_EVENT ADD CONSTRAINT STOCK_EVENT_FK2 FOREIGN KEY (ORGU_ID) REFERENCES ORG_UNIT(ORGU_ID);


ALTER TABLE STOCK_EVENT ADD CONSTRAINT STOCK_EVENT_FK4 FOREIGN KEY (USR_ID) REFERENCES APP_USER(USR_ID);


ALTER TABLE STOCK_EVENT ADD CONSTRAINT STOCK_EVENT_FK5 FOREIGN KEY (PROD_ID) REFERENCES PRODUCT(PROD_ID);


#ALTER TABLE STOCK_EVENT ADD CONSTRAINT STOCK_EVENT_FK8 FOREIGN KEY (TXN_TYPE) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);
#

#ALTER TABLE STOCK_EVENT ADD CONSTRAINT STOCK_EVENT_FK9 FOREIGN KEY (STCK_COND) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);
#

#ALTER TABLE STOCK_EVENT ADD CONSTRAINT STOCK_EVENT_FK10 FOREIGN KEY (STCK_CAT) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);
#

#ALTER TABLE STOCK_EVENT ADD CONSTRAINT STOCK_EVENT_FK12 FOREIGN KEY (UNOM_ID) REFERENCES UNIT_OF_MEASURE(UNOM_ID);
#

#ALTER TABLE STOCK_EVENT ADD CONSTRAINT STOCK_EVENT_FK14 FOREIGN KEY (STCK_LOCN_ID) REFERENCES STOCK_LOCATION(STCK_LOCN_ID);
#

ALTER TABLE INVOICE ADD CONSTRAINT INVOICE_FK1 FOREIGN KEY (TXHD_ID) REFERENCES TXN_HEADER(TXHD_ID);


ALTER TABLE INVOICE ADD CONSTRAINT INVOICE_FK2 FOREIGN KEY (ORGU_ID) REFERENCES ORG_UNIT(ORGU_ID);


ALTER TABLE INVOICE ADD CONSTRAINT INVOICE_FK3 FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID);


#ALTER TABLE INVOICE ADD CONSTRAINT INVOICE_FK4 FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID);
#

ALTER TABLE INVOICE ADD CONSTRAINT INVOICE_FK5 FOREIGN KEY (TXIV_TXN_TYPE) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);



ALTER TABLE INVOICE_DETAIL ADD CONSTRAINT INVOICE_DETAIL_FK1 FOREIGN KEY (TXIV_ID) REFERENCES INVOICE(TXIV_ID);


ALTER TABLE INVOICE_DETAIL ADD CONSTRAINT INVOICE_DETAIL_FK2 FOREIGN KEY (TXDE_ID) REFERENCES TXN_DETAIL(TXDE_ID);


ALTER TABLE INVOICE_DETAIL ADD CONSTRAINT INVOICE_DETAIL_FK3 FOREIGN KEY (ORGU_ID) REFERENCES ORG_UNIT(ORGU_ID);


ALTER TABLE INVOICE_DETAIL ADD CONSTRAINT INVOICE_DETAIL_FK4 FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID);


ALTER TABLE INVOICE_DETAIL ADD CONSTRAINT INVOICE_DETAIL_FK5 FOREIGN KEY (TXID_LINE_TYPE) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);



ALTER TABLE INVOICE_MEDIA ADD CONSTRAINT INVOICE_MEDIA_FK1 FOREIGN KEY (TXIV_ID) REFERENCES INVOICE(TXIV_ID);


ALTER TABLE INVOICE_MEDIA ADD CONSTRAINT INVOICE_MEDIA_FK2 FOREIGN KEY (TXMD_ID) REFERENCES TXN_MEDIA(TXMD_ID);


ALTER TABLE INVOICE_MEDIA ADD CONSTRAINT INVOICE_MEDIA_FK3 FOREIGN KEY (ORGU_ID) REFERENCES ORG_UNIT(ORGU_ID);


ALTER TABLE INVOICE_MEDIA ADD CONSTRAINT INVOICE_MEDIA_FK4 FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID);


ALTER TABLE INVOICE_MEDIA ADD CONSTRAINT INVOICE_MEDIA_FK5 FOREIGN KEY (TXIM_LINE_TYPE) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);


ALTER TABLE CUSTOMER_ACCOUNT_DEBT ADD CONSTRAINT CUSTOMER_ACCOUNT_DEBT_FK1 FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID);


ALTER TABLE CUSTOMER_ACCOUNT_DEBT ADD CONSTRAINT CUSTOMER_ACCOUNT_DEBT_FK2 FOREIGN KEY (TXHD_ID) REFERENCES INVOICE(TXIV_ID);


ALTER TABLE TXN_ACC_PAYMENT ADD CONSTRAINT TXN_ACC_PAYMENT_FK1 FOREIGN KEY (TXHD_ID) REFERENCES TXN_HEADER(TXHD_ID);


ALTER TABLE TXN_ACC_PAYMENT ADD CONSTRAINT TXN_ACC_PAYMENT_FK2 FOREIGN KEY (CAD_ID) REFERENCES CUSTOMER_ACCOUNT_DEBT(CAD_ID);



ALTER TABLE CASH_SESSION ADD CONSTRAINT CASH_SESSION_FK1 FOREIGN KEY (ORGU_ID) REFERENCES ORG_UNIT(ORGU_ID);


ALTER TABLE CASH_SESSION ADD CONSTRAINT CASH_SESSION_FK2 FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID);


ALTER TABLE CASH_SESSION ADD CONSTRAINT CASH_SESSION_FK3 FOREIGN KEY (CSSN_OPERATOR) REFERENCES APP_USER(USR_ID);



ALTER TABLE CASH_SESSION ADD CONSTRAINT CASH_SESSION_FK4 FOREIGN KEY (CSSN_STATUS) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);


ALTER TABLE CASH_SESSION ADD CONSTRAINT CASH_SESSION_FK5 FOREIGN KEY (CSSN_METHOD_OPEN) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);


ALTER TABLE CASH_SESSION ADD CONSTRAINT CASH_SESSION_FK6 FOREIGN KEY (CSSN_METHOD_CLOSE) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);


ALTER TABLE CASH_SESSION ADD CONSTRAINT CASH_SESSION_FK7 FOREIGN KEY (CSSN_CYCLE_PERIOD) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);


ALTER TABLE SESSION_EVENT ADD CONSTRAINT SESSION_EVENT_FK1 FOREIGN KEY (CSSN_SESSION_ID) REFERENCES CASH_SESSION(CSSN_SESSION_ID);


ALTER TABLE SESSION_EVENT ADD CONSTRAINT SESSION_EVENT_FK2 FOREIGN KEY (ORGU_ID) REFERENCES ORG_UNIT(ORGU_ID);


ALTER TABLE SESSION_EVENT ADD CONSTRAINT SESSION_EVENT_FK3 FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID);


ALTER TABLE SESSION_EVENT ADD CONSTRAINT SESSION_EVENT_FK4 FOREIGN KEY (SEEV_EVENT_TYPE) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);


ALTER TABLE SESSION_EVENT ADD CONSTRAINT SESSION_EVENT_FK5 FOREIGN KEY (SEEV_OPERATOR) REFERENCES APP_USER(USR_ID);


ALTER TABLE SESSION_MEDIA ADD CONSTRAINT SESSION_MEDIA_FK1 FOREIGN KEY (CSSN_SESSION_ID) REFERENCES CASH_SESSION(CSSN_SESSION_ID);


ALTER TABLE SESSION_MEDIA ADD CONSTRAINT SESSION_MEDIA_FK2 FOREIGN KEY (SEEV_ID) REFERENCES SESSION_EVENT(SEEV_ID);


ALTER TABLE SESSION_MEDIA ADD CONSTRAINT SESSION_MEDIA_FK3 FOREIGN KEY (ORGU_ID) REFERENCES ORG_UNIT(ORGU_ID);


ALTER TABLE SESSION_MEDIA ADD CONSTRAINT SESSION_MEDIA_FK4 FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID);


ALTER TABLE SESSION_MEDIA ADD CONSTRAINT SESSION_MEDIA_FK5 FOREIGN KEY (MEDT_ID) REFERENCES MEDIA_TYPE(MEDT_ID);


ALTER TABLE SESSION_MEDIA ADD CONSTRAINT SESSION_MEDIA_FK6 FOREIGN KEY (PAYM_ID) REFERENCES PAYMENT_MEDIA(PAYM_ID);



ALTER TABLE SESSION_EVENT_DETAIL ADD CONSTRAINT SESSION_EVENT_DETAIL_FK1 FOREIGN KEY (CSSN_SESSION_ID) REFERENCES CASH_SESSION(CSSN_SESSION_ID);


ALTER TABLE SESSION_EVENT_DETAIL ADD CONSTRAINT SESSION_EVENT_DETAIL_FK2 FOREIGN KEY (SEEV_ID) REFERENCES SESSION_EVENT(SEEV_ID);


ALTER TABLE SESSION_EVENT_DETAIL ADD CONSTRAINT SESSION_EVENT_DETAIL_FK3 FOREIGN KEY (ORGU_ID) REFERENCES ORG_UNIT(ORGU_ID);


ALTER TABLE SESSION_EVENT_DETAIL ADD CONSTRAINT SESSION_EVENT_DETAIL_FK4 FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID);


ALTER TABLE SESSION_EVENT_DETAIL ADD CONSTRAINT SESSION_EVENT_DETAIL_FK5 FOREIGN KEY (MEDT_ID) REFERENCES MEDIA_TYPE(MEDT_ID);


ALTER TABLE SESSION_EVENT_DETAIL ADD CONSTRAINT SESSION_EVENT_DETAIL_FK6 FOREIGN KEY (PAYM_ID) REFERENCES PAYMENT_MEDIA(PAYM_ID);



ALTER TABLE SESSION_TOTAL ADD CONSTRAINT SESSION_TOTAL_FK1 FOREIGN KEY (CSSN_SESSION_ID) REFERENCES CASH_SESSION(CSSN_SESSION_ID);


ALTER TABLE SESSION_TOTAL ADD CONSTRAINT SESSION_TOTAL_FK2 FOREIGN KEY (MEDT_ID) REFERENCES MEDIA_TYPE(MEDT_ID);


ALTER TABLE SESSION_TOTAL ADD CONSTRAINT SESSION_TOTAL_FK3 FOREIGN KEY (PAYM_ID) REFERENCES PAYMENT_MEDIA(PAYM_ID);


ALTER TABLE SESSION_TOTAL ADD CONSTRAINT SESSION_TOTAL_UK1 UNIQUE(CSSN_SESSION_ID,
   MEDT_ID,
   PAYM_ID);




ALTER TABLE TXN_SESSION_LINK ADD CONSTRAINT TXN_SESSION_LINK_FK1 FOREIGN KEY (CSSN_SESSION_ID) REFERENCES CASH_SESSION(CSSN_SESSION_ID);


ALTER TABLE TXN_SESSION_LINK ADD CONSTRAINT TXN_SESSION_LINK_FK2 FOREIGN KEY (TXN_TYPE) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);


ALTER TABLE TXN_SESSION_LINK ADD CONSTRAINT TXN_SESSION_LINK_FK3 FOREIGN KEY (ORGU_ID) REFERENCES ORG_UNIT(ORGU_ID);

ALTER TABLE TXN_SESSION_LINK ADD CONSTRAINT TXN_SESSION_LINK_FK4 FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID);



ALTER TABLE TOTAL_SALE_OPERATOR ADD CONSTRAINT TOTAL_SALE_OPERATOR_FK1 FOREIGN KEY (TOOP_OPERATOR) REFERENCES app_user(USR_ID);


ALTER TABLE TOTAL_SALE_OPERATOR ADD CONSTRAINT TOTAL_SALE_OPERATOR_FK2 FOREIGN KEY (TOOP_TXN_TYPE) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);


ALTER TABLE TOTAL_SALE_OPERATOR ADD CONSTRAINT TOTAL_SALE_OPERATOR_FK3 FOREIGN KEY (ORGU_ID) REFERENCES ORG_UNIT(ORGU_ID);


ALTER TABLE TOTAL_SALE_OPERATOR ADD CONSTRAINT TOTAL_SALE_OPERATOR_FK4 FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID);



ALTER TABLE TOTAL_TAX_GROUP ADD CONSTRAINT TOTAL_TAX_GROUP_FK1 FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID);


ALTER TABLE TOTAL_TAX_GROUP ADD CONSTRAINT TOTAL_TAX_GROUP_FK2 FOREIGN KEY (ORGU_ID) REFERENCES ORG_UNIT(ORGU_ID);


ALTER TABLE TOTAL_TAX_GROUP ADD CONSTRAINT TOTAL_TAX_GROUP_FK3 FOREIGN KEY (TOTG_TXRL_ID) REFERENCES TAX_LEG_VARIANCE(TXLV_ID);



ALTER TABLE TOTAL_MEDIA_OPERATOR ADD CONSTRAINT TOTAL_MEDIA_OPERATOR_FK1 FOREIGN KEY (TOMO_OPERATOR) REFERENCES app_user(USR_ID);


ALTER TABLE TOTAL_MEDIA_OPERATOR ADD CONSTRAINT TOTAL_MEDIA_OPERATOR_FK3 FOREIGN KEY (ORGU_ID) REFERENCES ORG_UNIT(ORGU_ID);


ALTER TABLE TOTAL_MEDIA_OPERATOR ADD CONSTRAINT TOTAL_MEDIA_OPERATOR_FK4 FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID);


ALTER TABLE ACCOUNT ADD CONSTRAINT ACCOUNT_FK1 FOREIGN KEY (ORGU_ID) REFERENCES ORG_UNIT(ORGU_ID);


ALTER TABLE ACCOUNT ADD CONSTRAINT ACCOUNT_FK2 FOREIGN KEY (ACC_TYPE) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);


ALTER TABLE JOURNAL_ENTRY ADD CONSTRAINT JOURNAL_ENTRY_FK1 FOREIGN KEY (ORGU_ID) REFERENCES ORG_UNIT(ORGU_ID);


ALTER TABLE JOURNAL_ENTRY ADD CONSTRAINT JOURNAL_ENTRY_FK2 FOREIGN KEY (CSSN_SESSION_ID) REFERENCES CASH_SESSION(CSSN_SESSION_ID);


ALTER TABLE JOURNAL_ENTRY ADD CONSTRAINT JOURNAL_ENTRY_FK3 FOREIGN KEY (ACC_ID) REFERENCES ACCOUNT(ACC_ID);


ALTER TABLE JOURNAL_ENTRY ADD CONSTRAINT JOURNAL_ENTRY_FK4 FOREIGN KEY (APP_USER_ID) REFERENCES APP_USER(USR_ID);


ALTER TABLE JOURNAL_SUPPORT ADD CONSTRAINT JOURNAL_SUPPORT_FK1 FOREIGN KEY (JRN_ID) REFERENCES JOURNAL_ENTRY(JRN_ID);


ALTER TABLE JOURNAL_SUPPORT ADD CONSTRAINT JOURNAL_SUPPORT_FK2 FOREIGN KEY (TXMD_ID) REFERENCES TXN_MEDIA(TXMD_ID);



ALTER TABLE JOURNAL_RULE ADD CONSTRAINT JOURNAL_RULE_FK1 FOREIGN KEY (ORGU_ID) REFERENCES ORG_UNIT(ORGU_ID);


ALTER TABLE JOURNAL_RULE ADD CONSTRAINT JOURNAL_RULE_FK2 FOREIGN KEY (TXN_TYPE) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);


ALTER TABLE JOURNAL_RULE ADD CONSTRAINT JOURNAL_RULE_FK3 FOREIGN KEY (ACC_ID) REFERENCES ACCOUNT(ACC_ID);


ALTER TABLE JOURNAL_RULE ADD CONSTRAINT JOURNAL_RULE_FK4 FOREIGN KEY (JRNR_ACTION) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);



ALTER TABLE ACCOUNTING_EXPORT ADD CONSTRAINT ACCOUNTING_EXPORT_FK1 FOREIGN KEY (ORGU_ID) REFERENCES ORG_UNIT(ORGU_ID);


ALTER TABLE ACCOUNTING_EXPORT ADD CONSTRAINT ACCOUNTING_EXPORT_FK2 FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID);


ALTER TABLE ACCOUNTING_EXPORT ADD CONSTRAINT ACCOUNTING_EXPORT_FK3 FOREIGN KEY (APP_USER_ID) REFERENCES APP_USER(USR_ID);


ALTER TABLE ACC_EXPORT_SUPP_LINK ADD CONSTRAINT ACC_EXPORT_SUPP_LINK_FK1 FOREIGN KEY (ACC_EXP_ID) REFERENCES ACCOUNTING_EXPORT(ACC_EXP_ID);


ALTER TABLE ACC_EXPORT_SUPP_LINK ADD CONSTRAINT ACC_EXPORT_SUPP_LINK_FK2 FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIER(SUPPLIER_ID);



ALTER TABLE ACC_EXPORT_DELN_LINK ADD CONSTRAINT ACC_EXPORT_DELN_LINK_FK1 FOREIGN KEY (ACC_EXP_ID) REFERENCES ACCOUNTING_EXPORT(ACC_EXP_ID);


ALTER TABLE ACC_EXPORT_DELN_LINK ADD CONSTRAINT ACC_EXPORT_DELN_LINK_FK2 FOREIGN KEY (DELN_ID) REFERENCES DELIVERY_NOTE_HEADER(DELN_ID);



ALTER TABLE ACC_EXPORT_SESSION_LINK ADD CONSTRAINT ACC_EXPORT_SESSION_LINK_FK1 FOREIGN KEY (ACC_EXP_ID) REFERENCES ACCOUNTING_EXPORT(ACC_EXP_ID);



ALTER TABLE ACC_EXPORT_SESSION_LINK ADD CONSTRAINT ACC_EXPORT_SESSION_LINK_FK2 FOREIGN KEY (CSSN_SESSION_ID) REFERENCES CASH_SESSION(CSSN_SESSION_ID);



ALTER TABLE PO_SO_LINK ADD CONSTRAINT PO_SO_LINK_FK1 FOREIGN KEY (POH_ID) REFERENCES PURCHASE_ORDER_HEADER(POH_ID);


ALTER TABLE PO_SO_LINK ADD CONSTRAINT PO_SO_LINK_FK2 FOREIGN KEY (POL_ID) REFERENCES PURCHASE_LINE(POL_ID);


ALTER TABLE PO_SO_LINK ADD CONSTRAINT PO_SO_LINK_FK3 FOREIGN KEY (TXHD_ID) REFERENCES TXN_HEADER(TXHD_ID);


ALTER TABLE PO_SO_LINK ADD CONSTRAINT PO_SO_LINK_FK5 FOREIGN KEY (POSO_STATUS) REFERENCES CONFIG_CATEGORY(CATEGORY_ID);


ALTER TABLE PO_SO_LINK ADD CONSTRAINT PO_SO_LINK_FK6 FOREIGN KEY (TXDE_ID) REFERENCES TXN_DETAIL(TXDE_ID);



ALTER TABLE CATEGORY_VALUE ADD CONSTRAINT CAT_VALUE_FK1 FOREIGN KEY (CATH_ID) REFERENCES CATEGORY_HEADING(CATH_ID);


ALTER TABLE DEPT_CATEGORY ADD CONSTRAINT DEPT_CATEGORY_FK1 FOREIGN KEY (DEPT_ID) REFERENCES DEPARTMENT(DEPT_ID);


ALTER TABLE PROD_DEPT_CAT ADD CONSTRAINT PROD_DEPT_CAT_FK1 FOREIGN KEY (PROD_ID) REFERENCES PRODUCT(PROD_ID);


ALTER TABLE PROD_DEPT_CAT ADD CONSTRAINT PROD_DEPT_CAT_FK2 FOREIGN KEY (DEPT_ID) REFERENCES DEPARTMENT(DEPT_ID);

ALTER TABLE PROD_DEPT_CAT ADD CONSTRAINT PROD_DEPT_CAT_FK3 FOREIGN KEY (ORGU_ID) REFERENCES ORG_UNIT(ORGU_ID);


ALTER TABLE DEPT_CATEGORY_VALUE ADD CONSTRAINT DEPT_CATEGORY_VALUE_FK1 FOREIGN KEY (DEPT_ID) REFERENCES DEPARTMENT(DEPT_ID);


ALTER TABLE DEPT_CATEGORY_VALUE ADD CONSTRAINT DEPT_CATEGORY_VALUE_FK2 FOREIGN KEY (CATV_ID) REFERENCES CATEGORY_VALUE(CATV_ID);


ALTER TABLE DEPT_CATEGORY_VALUE ADD CONSTRAINT DEPT_CATEGORY_VALUE_FK3 FOREIGN KEY (CATH_ID) REFERENCES CATEGORY_HEADING(CATH_ID);


#INDEXES
CREATE INDEX SUPP_IX1 ON SUPPLIER
(SUPPLIER_NAME);


CREATE INDEX SUPP_IX2 ON SUPPLIER
(SUPPLIER_CODE);



CREATE INDEX LEGT_IX1 ON LEGAL_TENDER
(LEGT_FROM_DATE);


CREATE INDEX LEGT_IX2 ON LEGAL_TENDER
(LEGT_TO_DATE);


CREATE INDEX PRIB_IX1 ON PRICE_BAND
(ORGU_ID);


CREATE INDEX PRIB_IX3 ON PRICE_BAND
(LEGT_ID);


CREATE INDEX ORGU_IX3 ON ORG_UNIT
(COMP_ID);


CREATE INDEX ORGU_IX8 ON ORG_UNIT
(ORGU_CODE);


CREATE INDEX ORGU_IX7 ON ORG_UNIT
(PRIB_ID);


CREATE INDEX ORGU_IX5 ON ORG_UNIT
(ORGT_TYPE_ID);


CREATE INDEX ORGU_IX2 ON ORG_UNIT
(WARH_ID);


CREATE INDEX ORGU_IX9 ON ORG_UNIT
(PRIB_ID_COST);


CREATE INDEX ORGU_IX6 ON ORG_UNIT
(ORGU_DEF_LEGT_ID);


CREATE INDEX ORGUIX10 ON ORG_UNIT
(ORGU_DEF_LANG_ID);


CREATE INDEX PSTR_IX1 ON PRODGP_STRUCTURE
(ORGU_ID);


CREATE INDEX PSTR_IX5 ON PRODGP_STRUCTURE
(PSTR_IS_LIVE);


CREATE INDEX PSTR_IX3 ON PRODGP_STRUCTURE
(PSTR_DATE_FROM);


CREATE INDEX PSTR_IX6 ON PRODGP_STRUCTURE
(LOCN_ID);


CREATE INDEX PSTR_IX4 ON PRODGP_STRUCTURE
(PSTR_DATE_TO);


CREATE INDEX PSTR_IX2 ON PRODGP_STRUCTURE
(PSTR_CONSTANT);


CREATE INDEX PGPT_IX5 ON PRODGP_STRUCTURE_DETAIL
(PRGT_ID);


CREATE INDEX PGPT_IX4 ON PRODGP_STRUCTURE_DETAIL
(PSTR_ID);


CREATE INDEX PGPT_IX3 ON PRODGP_STRUCTURE_DETAIL
(PGSD_ID_PARENT);


CREATE INDEX PRGP_IX4 ON PRODUCT_GROUP
(PRGP_MAIN_PRGP_ID);


CREATE INDEX PGSL_IX4 ON PRODGP_STR_LINK
(PRGP_CHILD_ID);


CREATE INDEX PGSL_IX3 ON PRODGP_STR_LINK
(PRGP_PARENT_ID);


CREATE INDEX PGSL_IX1 ON PRODGP_STR_LINK
(PRGP_ID);


CREATE INDEX PGSL_IX5 ON PRODGP_STR_LINK
(PGSD_ID);


CREATE INDEX TXRN_IX1 ON TAX_RULE_NAME
(TXRN_NAME);



CREATE INDEX TXRL_IX3 ON TAX_RULE
(TXRN_ID);


CREATE INDEX TXRL_IX4 ON TAX_RULE
(TXRL_CODE);


CREATE INDEX TXLV_IX4 ON TAX_LEG_VARIANCE
(TXLV_DATETIME_FROM);


CREATE INDEX TXLV_IX1 ON TAX_LEG_VARIANCE
(TXRL_ID);


CREATE INDEX TXLV_IX5 ON TAX_LEG_VARIANCE
(TXLV_DATETIME_TO);


CREATE INDEX UNOM_IX1 ON UNIT_OF_MEASURE
(UNOM_CODE);


CREATE INDEX PROD_IX1 ON PRODUCT
(ORGU_ID_OWNING);


CREATE INDEX PROD_IX7 ON PRODUCT
(PROD_SKU);


CREATE INDEX PROD_IX2 ON PRODUCT
(PROD_NAME);


CREATE INDEX PROU_IX3 ON PROD_ORGU_LINK
(PROD_ID);



CREATE INDEX PROU_IX2 ON PROD_ORGU_LINK
(ORGU_ID);


CREATE INDEX TXHDIX01 ON TXN_HEADER
(TXHD_TXN_TYPE);


CREATE INDEX TXHDIX02 ON TXN_HEADER
(TXHD_TXN_NR);


CREATE INDEX TXHDIX03 ON TXN_HEADER
(TXHD_STATE);


CREATE INDEX TXHDIX04 ON TXN_HEADER
(ORGU_ID);


CREATE INDEX TXHDIX05 ON TXN_HEADER
(STORE_ID);


CREATE INDEX TXHDIX06 ON TXN_HEADER
(CUSTOMER_ID);


CREATE INDEX TXHDIX07 ON TXN_HEADER
(TXHD_PRJ_CODE);



CREATE INDEX TXN_DETAIL_IX01 ON TXN_DETAIL
(ORGU_ID);

CREATE INDEX TXN_DETAIL_IX02 ON TXN_DETAIL
(STORE_ID);


CREATE INDEX TXN_DETAIL_IX03 ON TXN_DETAIL
(TXHD_ID);


CREATE INDEX MEDIA_TYPE_IX01 ON MEDIA_TYPE
(MEDT_NAME);


CREATE INDEX MEDIA_TYPE_IX02 ON MEDIA_TYPE
(MEDT_CODE);


CREATE INDEX PAYMENT_MEDIA_IX01 ON PAYMENT_MEDIA
(PAYM_CODE);


CREATE INDEX PAYMENT_MEDIA_IX02 ON PAYMENT_MEDIA
(PAYM_NAME);


CREATE INDEX TXN_MEDIA_IX01 ON TXN_MEDIA
(ORGU_ID);

CREATE INDEX TXN_MEDIA_IX02 ON TXN_MEDIA
(STORE_ID);


CREATE INDEX TXN_MEDIA_IX03 ON TXN_MEDIA
(TXHD_ID);


CREATE INDEX TXN_MEDIA_IX04 ON TXN_MEDIA
(TXMD_TYPE);



CREATE INDEX POH_IX01 ON PURCHASE_ORDER_HEADER
(SUPPLIER_ID);


CREATE INDEX POH_IX02 ON PURCHASE_ORDER_HEADER
(POH_ORDER_NUMBER);


CREATE INDEX POH_IX03 ON PURCHASE_ORDER_HEADER
(POH_DELV_DATE);


CREATE INDEX POH_IX04 ON PURCHASE_ORDER_HEADER
(ORGU_ID);


CREATE INDEX POH_IX05 ON PURCHASE_ORDER_HEADER
(POH_STATUS);


CREATE INDEX POH_IX06 ON PURCHASE_ORDER_HEADER
(POH_TYPE);


CREATE INDEX POL_IX01 ON PURCHASE_LINE
(POH_ID);



CREATE INDEX POL_IX02 ON PURCHASE_LINE
(POH_ORDER_NUMBER);


CREATE INDEX POL_IX03 ON PURCHASE_LINE
(SPRC_ID);


CREATE INDEX POL_IX04 ON PURCHASE_LINE
(POL_DATE_RECEIVED);


CREATE INDEX POL_IX05 ON PURCHASE_LINE
(POL_STATUS);


CREATE INDEX DELN_HEADER_IX01 ON DELIVERY_NOTE_HEADER
(ORGU_ID);


CREATE INDEX DELN_HEADER_IX02 ON DELIVERY_NOTE_HEADER
(DELN_NOTE_NUMBER);


CREATE INDEX DELN_HEADER_IX03 ON DELIVERY_NOTE_HEADER
(DELN_GRN);


CREATE INDEX DELN_HEADER_IX04 ON DELIVERY_NOTE_HEADER
(POH_ID);


CREATE INDEX DELN_HEADER_IX05 ON DELIVERY_NOTE_HEADER
(POH_ORDER_NUMBER);


CREATE INDEX DELN_HEADER_IX06 ON DELIVERY_NOTE_HEADER
(SUPPLIER_ID);


CREATE INDEX DELN_HEADER_IX07 ON DELIVERY_NOTE_HEADER
(DELN_DELIVERY_DATE);


CREATE INDEX DELN_HEADER_IX08 ON DELIVERY_NOTE_HEADER
(DELN_STATUS);


CREATE INDEX DELN_HEADER_IX09 ON DELIVERY_NOTE_HEADER
(DELN_PRJ_CODE);


CREATE INDEX PO_DEL_NOTE_LINK_IDX0 ON PO_DEL_NOTE_LINK
(POH_ORDER_NUMBER);


CREATE INDEX PO_DEL_NOTE_LINK_IDX1 ON PO_DEL_NOTE_LINK
(DELN_NOTE_NUMBER);


CREATE INDEX PO_DEL_NOTE_LINK_IDX2 ON PO_DEL_NOTE_LINK
(DELN_GRN);


CREATE INDEX PO_DEL_NOTE_LINK_IDX3 ON PO_DEL_NOTE_LINK
(DELN_ID);


CREATE INDEX PO_DEL_NOTE_LINK_IDX4 ON PO_DEL_NOTE_LINK
(POH_ID);


CREATE INDEX APP_USER_IDX1 ON APP_USER
(USR_NAME);


CREATE INDEX APP_USER_IDX2 ON APP_USER
(USR_PASS);


CREATE INDEX STOCK_LOCATION_IDX1 ON STOCK_LOCATION
(STCK_LOCN_NAME);


CREATE INDEX STOCK_IDX1 ON STOCK
(PROD_ID);


CREATE INDEX STOCK_IDX2 ON STOCK
(ORGU_ID_LOCATION);



CREATE INDEX STOCK_IDX3 ON STOCK
(STCK_COND);


CREATE INDEX STOCK_IDX4 ON STOCK
(STCK_CAT);


CREATE INDEX STOCK_IDX5 ON STOCK
(STCK_LOCN_ID);



CREATE INDEX STOCK_EVENT_IDX1 ON STOCK_EVENT
(STCK_ID);


CREATE INDEX STOCK_EVENT_IDX2 ON STOCK_EVENT
(ORGU_ID);


CREATE INDEX STOCK_EVENT_IDX3 ON STOCK_EVENT
(STORE_ID);


CREATE INDEX STOCK_EVENT_IDX4 ON STOCK_EVENT
(USR_ID);


CREATE INDEX STOCK_EVENT_IDX5 ON STOCK_EVENT
(PROD_ID);


CREATE INDEX STOCK_EVENT_IDX6 ON STOCK_EVENT
(STCK_EVNT_DATE);


CREATE INDEX STOCK_EVENT_IDX7 ON STOCK_EVENT
(TXN_DATE);


CREATE INDEX STOCK_EVENT_IDX8 ON STOCK_EVENT
(TXN_TYPE);


CREATE INDEX STOCK_EVENT_IDX9 ON STOCK_EVENT
(TXN_NUMBER);


CREATE INDEX STOCK_EVENT_IDX10 ON STOCK_EVENT
(STCK_COND);


CREATE INDEX STOCK_EVENT_IDX11 ON STOCK_EVENT
(STCK_CAT);


CREATE INDEX TOTAL_SALE_OPERATOR_IDX1 ON TOTAL_SALE_OPERATOR
(TOOP_OPERATOR);


CREATE INDEX TOTAL_SALE_OPERATOR_IDX2 ON TOTAL_SALE_OPERATOR
(TOOP_TXN_TYPE);


CREATE INDEX TOTAL_SALE_OPERATOR_IDX3 ON TOTAL_SALE_OPERATOR
(ORGU_ID);


CREATE INDEX TOTAL_SALE_OPERATOR_IDX4 ON TOTAL_SALE_OPERATOR
(STORE_ID);


CREATE INDEX TOTAL_SALE_OPERATOR_IDX5 ON TOTAL_SALE_OPERATOR
(TOOP_TRADING_DATE);


CREATE INDEX TOTAL_TAX_GROUP_IDX1 ON TOTAL_TAX_GROUP
(ORGU_ID);


CREATE INDEX TOTAL_TAX_GROUP_IDX2 ON TOTAL_TAX_GROUP
(STORE_ID);


CREATE INDEX TOTAL_TAX_GROUP_IDX3 ON TOTAL_TAX_GROUP
(TOTG_TXRL_ID);


CREATE INDEX TOTAL_TAX_GROUP_IDX4 ON TOTAL_TAX_GROUP
(TOTG_TRADING_DATE);


CREATE INDEX TOTAL_TAX_GROUP_IDX5 ON TOTAL_TAX_GROUP
(TOTG_TXGP_CODE);



CREATE INDEX TOTAL_MEDIA_OPERATOR_IDX1 ON TOTAL_MEDIA_OPERATOR
(TOMO_OPERATOR);


CREATE INDEX TOTAL_MEDIA_OPERATOR_IDX2 ON TOTAL_MEDIA_OPERATOR
(ORGU_ID);


CREATE INDEX TOTAL_MEDIA_OPERATOR_IDX3 ON TOTAL_MEDIA_OPERATOR
(STORE_ID);


CREATE INDEX TOTAL_MEDIA_OPERATOR_IDX4 ON TOTAL_MEDIA_OPERATOR
(TOMO_TRADING_DATE);


CREATE INDEX TOTAL_MEDIA_OPERATOR_IDX5 ON TOTAL_MEDIA_OPERATOR
(PAYM_ID);


CREATE INDEX SUPP_PROD_PRICE_IX1 ON SUPP_PROD_PRICE
(CATALOGUE_NO);


#UNIQUE CONSTRAINT:

Alter table CONFIG_CATEGORY
  ADD UNIQUE (CATEGORY_CODE);


Alter table APP_USER
  ADD UNIQUE (USR_NAME);


Alter table APP_ROLE
  ADD UNIQUE (ROLE_NAME);


Alter table APP_ROLE
  ADD UNIQUE (ROLE_CODE);




